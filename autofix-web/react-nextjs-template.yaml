apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: nextjs-template
  title: React Next JS Template ðŸ”¥
  description: Create a pre-configured Next Js Project.
  tags:
    - react
spec:
  owner: AlbathaNext
  type: service

  parameters:
    - title: Before we start, fill up the required fields below
      required:
        - component_id
        - description
        - owner
      properties:
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
        component_id:
          title: Name
          type: string
          description: Unique name of the component
          ui:field: EntityNamePicker
        description:
          title: Description
          type: string
          description: A title to display on the title of the web-app page
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - gitlab.com

  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./
        copyWithoutRender:
          - .gitlab/workflows/*
          - react-nextjs-template.yaml
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          artifact_id: ${{ parameters.component_id }}
          java_package_name: ${{ parameters.java_package_name }}
          owner: ${{ parameters.owner }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          http_port: 8080
          ci_name: ".gitlab-ci"

    - id: publish
      name: Publish
      action: publish:gitlab
      input:
        allowedHosts: ["gitlab.com"]
        description: This is ${{ parameters.component_id }}
        repoUrl: ${{ parameters.repoUrl }}
        defaultBranch: main

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"
  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
