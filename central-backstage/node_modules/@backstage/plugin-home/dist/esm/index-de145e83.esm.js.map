{"version":3,"file":"index-de145e83.esm.js","sources":["../../src/homePageComponents/StarredEntities/Content.tsx"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  useStarredEntities,\n  entityRouteRef,\n} from '@backstage/plugin-catalog-react';\nimport { parseEntityRef } from '@backstage/catalog-model';\nimport { useRouteRef } from '@backstage/core-plugin-api';\nimport { Link } from '@backstage/core-components';\nimport {\n  List,\n  ListItem,\n  ListItemSecondaryAction,\n  IconButton,\n  ListItemText,\n  Tooltip,\n  Typography,\n} from '@material-ui/core';\nimport StarIcon from '@material-ui/icons/Star';\nimport React from 'react';\n\n/**\n * A component to display a list of starred entities for the user.\n *\n * @public\n */\n\nexport const Content = () => {\n  const catalogEntityRoute = useRouteRef(entityRouteRef);\n  const { starredEntities, toggleStarredEntity } = useStarredEntities();\n\n  if (starredEntities.size === 0)\n    return (\n      <Typography variant=\"body1\">\n        You do not have any starred entities yet!\n      </Typography>\n    );\n\n  return (\n    <List>\n      {Array.from(starredEntities).map(entity => (\n        <ListItem key={entity}>\n          <Link to={catalogEntityRoute(parseEntityRef(entity))}>\n            <ListItemText primary={parseEntityRef(entity).name} />\n          </Link>\n          <ListItemSecondaryAction>\n            <Tooltip title=\"Remove from starred\">\n              <IconButton\n                edge=\"end\"\n                aria-label=\"unstar\"\n                onClick={() => toggleStarredEntity(entity)}\n              >\n                <StarIcon />\n              </IconButton>\n            </Tooltip>\n          </ListItemSecondaryAction>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n"],"names":[],"mappings":";;;;;;;;MAyCa,UAAU,MAAM;AAC3B,QAAM,qBAAqB,YAAY;AACvC,QAAM,EAAE,iBAAiB,wBAAwB;AAEjD,MAAI,gBAAgB,SAAS;AAC3B,+CACG,YAAD;AAAA,MAAY,SAAQ;AAAA,OAAQ;AAKhC,6CACG,MAAD,MACG,MAAM,KAAK,iBAAiB,IAAI,gDAC9B,UAAD;AAAA,IAAU,KAAK;AAAA,yCACZ,MAAD;AAAA,IAAM,IAAI,mBAAmB,eAAe;AAAA,yCACzC,cAAD;AAAA,IAAc,SAAS,eAAe,QAAQ;AAAA,2CAE/C,yBAAD,0CACG,SAAD;AAAA,IAAS,OAAM;AAAA,yCACZ,YAAD;AAAA,IACE,MAAK;AAAA,IACL,cAAW;AAAA,IACX,SAAS,MAAM,oBAAoB;AAAA,yCAElC,UAAD;AAAA;;;;"}