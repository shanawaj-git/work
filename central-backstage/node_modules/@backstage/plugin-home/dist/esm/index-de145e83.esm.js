import { entityRouteRef, useStarredEntities } from '@backstage/plugin-catalog-react';
import { parseEntityRef } from '@backstage/catalog-model';
import { useRouteRef } from '@backstage/core-plugin-api';
import { Link } from '@backstage/core-components';
import { Typography, List, ListItem, ListItemText, ListItemSecondaryAction, Tooltip, IconButton } from '@material-ui/core';
import StarIcon from '@material-ui/icons/Star';
import React from 'react';

const Content = () => {
  const catalogEntityRoute = useRouteRef(entityRouteRef);
  const { starredEntities, toggleStarredEntity } = useStarredEntities();
  if (starredEntities.size === 0)
    return /* @__PURE__ */ React.createElement(Typography, {
      variant: "body1"
    }, "You do not have any starred entities yet!");
  return /* @__PURE__ */ React.createElement(List, null, Array.from(starredEntities).map((entity) => /* @__PURE__ */ React.createElement(ListItem, {
    key: entity
  }, /* @__PURE__ */ React.createElement(Link, {
    to: catalogEntityRoute(parseEntityRef(entity))
  }, /* @__PURE__ */ React.createElement(ListItemText, {
    primary: parseEntityRef(entity).name
  })), /* @__PURE__ */ React.createElement(ListItemSecondaryAction, null, /* @__PURE__ */ React.createElement(Tooltip, {
    title: "Remove from starred"
  }, /* @__PURE__ */ React.createElement(IconButton, {
    edge: "end",
    "aria-label": "unstar",
    onClick: () => toggleStarredEntity(entity)
  }, /* @__PURE__ */ React.createElement(StarIcon, null)))))));
};

export { Content };
//# sourceMappingURL=index-de145e83.esm.js.map
