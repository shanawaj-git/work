{"version":3,"file":"index-896aeac9.esm.js","sources":["../../src/components/EntityLinksCard/EntityLinksEmptyState.tsx","../../src/components/EntityLinksCard/IconLink.tsx","../../src/components/EntityLinksCard/useDynamicColumns.tsx","../../src/components/EntityLinksCard/LinksGridList.tsx","../../src/components/EntityLinksCard/EntityLinksCard.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BackstageTheme } from '@backstage/theme';\nimport { Button, makeStyles, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { CodeSnippet } from '@backstage/core-components';\n\nconst ENTITY_YAML = `metadata:\n  name: example\n  links:\n    - url: https://dashboard.example.com\n      title: My Dashboard\n      icon: dashboard`;\n\n/** @public */\nexport type EntityLinksEmptyStateClassKey = 'code';\n\nconst useStyles = makeStyles<BackstageTheme>(\n  theme => ({\n    code: {\n      borderRadius: 6,\n      margin: `${theme.spacing(2)}px 0px`,\n      background: theme.palette.type === 'dark' ? '#444' : '#fff',\n    },\n  }),\n  { name: 'PluginCatalogEntityLinksEmptyState' },\n);\n\nexport function EntityLinksEmptyState() {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Typography variant=\"body1\">\n        No links defined for this entity. You can add links to your entity YAML\n        as shown in the highlighted example below:\n      </Typography>\n      <div className={classes.code}>\n        <CodeSnippet\n          text={ENTITY_YAML}\n          language=\"yaml\"\n          showLineNumbers\n          highlightedNumbers={[3, 4, 5, 6]}\n          customStyle={{ background: 'inherit', fontSize: '115%' }}\n        />\n      </div>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        target=\"_blank\"\n        href=\"https://backstage.io/docs/features/software-catalog/descriptor-format#links-optional\"\n      >\n        Read more\n      </Button>\n    </>\n  );\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { makeStyles, Box, Typography } from '@material-ui/core';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport React from 'react';\nimport { Link } from '@backstage/core-components';\nimport { IconComponent } from '@backstage/core-plugin-api';\n\nconst useStyles = makeStyles({\n  svgIcon: {\n    display: 'inline-block',\n    '& svg': {\n      display: 'inline-block',\n      fontSize: 'inherit',\n      verticalAlign: 'baseline',\n    },\n  },\n});\n\nexport function IconLink(props: {\n  href: string;\n  text?: string;\n  Icon?: IconComponent;\n}) {\n  const { href, text, Icon } = props;\n  const classes = useStyles();\n\n  return (\n    <Box display=\"flex\">\n      <Box mr={1} className={classes.svgIcon}>\n        <Typography component=\"div\">\n          {Icon ? <Icon /> : <LanguageIcon />}\n        </Typography>\n      </Box>\n      <Box flexGrow=\"1\">\n        <Link to={href} target=\"_blank\" rel=\"noopener\">\n          {text || href}\n        </Link>\n      </Box>\n    </Box>\n  );\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Theme, useMediaQuery } from '@material-ui/core';\nimport { Breakpoint, ColumnBreakpoints } from './types';\n\nconst colDefaults: ColumnBreakpoints = {\n  xs: 1,\n  sm: 1,\n  md: 1,\n  lg: 2,\n  xl: 3,\n};\n\nexport function useDynamicColumns(\n  cols: ColumnBreakpoints | number | undefined,\n): number {\n  const matches: (Breakpoint | null)[] = [\n    useMediaQuery((theme: Theme) => theme.breakpoints.up('xl')) ? 'xl' : null,\n    useMediaQuery((theme: Theme) => theme.breakpoints.up('lg')) ? 'lg' : null,\n    useMediaQuery((theme: Theme) => theme.breakpoints.up('md')) ? 'md' : null,\n    useMediaQuery((theme: Theme) => theme.breakpoints.up('sm')) ? 'sm' : null,\n    useMediaQuery((theme: Theme) => theme.breakpoints.up('xs')) ? 'xs' : null,\n  ];\n\n  let numOfCols = 1;\n\n  if (typeof cols === 'number') {\n    numOfCols = cols;\n  } else {\n    const breakpoint = matches.find(k => k !== null) ?? 'xs';\n    numOfCols = cols?.[breakpoint] ?? colDefaults[breakpoint];\n  }\n\n  return numOfCols;\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ImageList, ImageListItem } from '@material-ui/core';\nimport React from 'react';\nimport { IconLink } from './IconLink';\nimport { ColumnBreakpoints } from './types';\nimport { useDynamicColumns } from './useDynamicColumns';\nimport { IconComponent } from '@backstage/core-plugin-api';\n\nexport interface LinksGridListItem {\n  href: string;\n  text?: string;\n  Icon?: IconComponent;\n}\n\ninterface LinksGridListProps {\n  items: LinksGridListItem[];\n  cols?: ColumnBreakpoints | number;\n}\n\nexport function LinksGridList(props: LinksGridListProps) {\n  const { items, cols = undefined } = props;\n  const numOfCols = useDynamicColumns(cols);\n\n  return (\n    <ImageList rowHeight=\"auto\" cols={numOfCols}>\n      {items.map(({ text, href, Icon }, i) => (\n        <ImageListItem key={i}>\n          <IconLink href={href} text={text ?? href} Icon={Icon} />\n        </ImageListItem>\n      ))}\n    </ImageList>\n  );\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useEntity } from '@backstage/plugin-catalog-react';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport React from 'react';\nimport { EntityLinksEmptyState } from './EntityLinksEmptyState';\nimport { LinksGridList } from './LinksGridList';\nimport { ColumnBreakpoints } from './types';\nimport { IconComponent, useApp } from '@backstage/core-plugin-api';\nimport { InfoCard } from '@backstage/core-components';\n\n/** @public */\nexport interface EntityLinksCardProps {\n  cols?: ColumnBreakpoints | number;\n  variant?: 'gridItem';\n}\n\nexport function EntityLinksCard(props: EntityLinksCardProps) {\n  const { cols = undefined, variant } = props;\n  const { entity } = useEntity();\n  const app = useApp();\n\n  const iconResolver = (key?: string): IconComponent =>\n    key ? app.getSystemIcon(key) ?? LanguageIcon : LanguageIcon;\n\n  const links = entity?.metadata?.links;\n\n  return (\n    <InfoCard title=\"Links\" variant={variant}>\n      {!links || links.length === 0 ? (\n        <EntityLinksEmptyState />\n      ) : (\n        <LinksGridList\n          cols={cols}\n          items={links.map(({ url, title, icon }) => ({\n            text: title ?? url,\n            href: url,\n            Icon: iconResolver(icon),\n          }))}\n        />\n      )}\n    </InfoCard>\n  );\n}\n"],"names":["useStyles"],"mappings":"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"}