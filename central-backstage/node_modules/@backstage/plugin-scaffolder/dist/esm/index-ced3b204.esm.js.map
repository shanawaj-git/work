{"version":3,"file":"index-ced3b204.esm.js","sources":["../../src/api.ts","../../src/components/fields/EntityPicker/EntityPicker.tsx","../../src/components/fields/EntityNamePicker/EntityNamePicker.tsx","../../src/components/fields/EntityNamePicker/validation.ts","../../src/components/fields/EntityTagsPicker/EntityTagsPicker.tsx","../../src/components/fields/OwnerPicker/OwnerPicker.tsx","../../src/components/fields/RepoUrlPicker/GithubRepoPicker.tsx","../../src/components/fields/RepoUrlPicker/GitlabRepoPicker.tsx","../../src/components/fields/RepoUrlPicker/AzureRepoPicker.tsx","../../src/components/fields/RepoUrlPicker/BitbucketRepoPicker.tsx","../../src/components/fields/RepoUrlPicker/RepoUrlPickerHost.tsx","../../src/components/fields/RepoUrlPicker/utils.ts","../../src/components/secrets/SecretsContext.tsx","../../src/components/fields/RepoUrlPicker/RepoUrlPicker.tsx","../../src/components/fields/RepoUrlPicker/validation.ts","../../src/components/fields/OwnedEntityPicker/OwnedEntityPicker.tsx","../../src/extensions/index.tsx","../../src/routes.ts","../../src/plugin.ts","../../src/components/TemplateTypePicker/TemplateTypePicker.tsx","../../src/components/hooks/useEventStream.ts","../../src/components/TaskPage/IconLink.tsx","../../src/components/TaskPage/TaskPageLinks.tsx","../../src/components/TaskPage/TaskPage.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { parseEntityRef } from '@backstage/catalog-model';\nimport {\n  createApiRef,\n  DiscoveryApi,\n  FetchApi,\n} from '@backstage/core-plugin-api';\nimport { ResponseError } from '@backstage/errors';\nimport { ScmIntegrationRegistry } from '@backstage/integration';\nimport { Observable } from '@backstage/types';\nimport qs from 'qs';\nimport ObservableImpl from 'zen-observable';\nimport {\n  ListActionsResponse,\n  LogEvent,\n  ScaffolderApi,\n  TemplateParameterSchema,\n  ScaffolderScaffoldOptions,\n  ScaffolderScaffoldResponse,\n  ScaffolderStreamLogsOptions,\n  ScaffolderGetIntegrationsListOptions,\n  ScaffolderGetIntegrationsListResponse,\n  ScaffolderTask,\n} from './types';\n\n/**\n * Utility API reference for the {@link ScaffolderApi}.\n *\n * @public\n */\nexport const scaffolderApiRef = createApiRef<ScaffolderApi>({\n  id: 'plugin.scaffolder.service',\n});\n\n/**\n * An API to interact with the scaffolder backend.\n *\n * @public\n */\nexport class ScaffolderClient implements ScaffolderApi {\n  private readonly discoveryApi: DiscoveryApi;\n  private readonly scmIntegrationsApi: ScmIntegrationRegistry;\n  private readonly fetchApi: FetchApi;\n  private readonly useLongPollingLogs: boolean;\n\n  constructor(options: {\n    discoveryApi: DiscoveryApi;\n    fetchApi: FetchApi;\n    scmIntegrationsApi: ScmIntegrationRegistry;\n    useLongPollingLogs?: boolean;\n  }) {\n    this.discoveryApi = options.discoveryApi;\n    this.fetchApi = options.fetchApi ?? { fetch };\n    this.scmIntegrationsApi = options.scmIntegrationsApi;\n    this.useLongPollingLogs = options.useLongPollingLogs ?? false;\n  }\n\n  async getIntegrationsList(\n    options: ScaffolderGetIntegrationsListOptions,\n  ): Promise<ScaffolderGetIntegrationsListResponse> {\n    const integrations = [\n      ...this.scmIntegrationsApi.azure.list(),\n      ...this.scmIntegrationsApi.bitbucket.list(),\n      ...this.scmIntegrationsApi.github.list(),\n      ...this.scmIntegrationsApi.gitlab.list(),\n    ]\n      .map(c => ({ type: c.type, title: c.title, host: c.config.host }))\n      .filter(c => options.allowedHosts.includes(c.host));\n\n    return {\n      integrations,\n    };\n  }\n\n  async getTemplateParameterSchema(\n    templateRef: string,\n  ): Promise<TemplateParameterSchema> {\n    const { namespace, kind, name } = parseEntityRef(templateRef, {\n      defaultKind: 'template',\n    });\n\n    const baseUrl = await this.discoveryApi.getBaseUrl('scaffolder');\n    const templatePath = [namespace, kind, name]\n      .map(s => encodeURIComponent(s))\n      .join('/');\n\n    const url = `${baseUrl}/v2/templates/${templatePath}/parameter-schema`;\n\n    const response = await this.fetchApi.fetch(url);\n    if (!response.ok) {\n      throw await ResponseError.fromResponse(response);\n    }\n\n    const schema: TemplateParameterSchema = await response.json();\n    return schema;\n  }\n\n  /**\n   * Executes the scaffolding of a component, given a template and its\n   * parameter values.\n   *\n   * @param options - The {@link ScaffolderScaffoldOptions} the scaffolding.\n   */\n  async scaffold(\n    options: ScaffolderScaffoldOptions,\n  ): Promise<ScaffolderScaffoldResponse> {\n    const { templateRef, values, secrets = {} } = options;\n    const url = `${await this.discoveryApi.getBaseUrl('scaffolder')}/v2/tasks`;\n    const response = await this.fetchApi.fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        templateRef,\n        values: { ...values },\n        secrets,\n      }),\n    });\n\n    if (response.status !== 201) {\n      const status = `${response.status} ${response.statusText}`;\n      const body = await response.text();\n      throw new Error(`Backend request failed, ${status} ${body.trim()}`);\n    }\n\n    const { id } = (await response.json()) as { id: string };\n    return { taskId: id };\n  }\n\n  async getTask(taskId: string): Promise<ScaffolderTask> {\n    const baseUrl = await this.discoveryApi.getBaseUrl('scaffolder');\n    const url = `${baseUrl}/v2/tasks/${encodeURIComponent(taskId)}`;\n\n    const response = await this.fetchApi.fetch(url);\n    if (!response.ok) {\n      throw await ResponseError.fromResponse(response);\n    }\n\n    return await response.json();\n  }\n\n  streamLogs(options: ScaffolderStreamLogsOptions): Observable<LogEvent> {\n    if (this.useLongPollingLogs) {\n      return this.streamLogsPolling(options);\n    }\n\n    return this.streamLogsEventStream(options);\n  }\n\n  private streamLogsEventStream({\n    taskId,\n    after,\n  }: {\n    taskId: string;\n    after?: number;\n  }): Observable<LogEvent> {\n    return new ObservableImpl(subscriber => {\n      const params = new URLSearchParams();\n      if (after !== undefined) {\n        params.set('after', String(Number(after)));\n      }\n\n      this.discoveryApi.getBaseUrl('scaffolder').then(\n        baseUrl => {\n          const url = `${baseUrl}/v2/tasks/${encodeURIComponent(\n            taskId,\n          )}/eventstream`;\n          const eventSource = new EventSource(url, { withCredentials: true });\n          eventSource.addEventListener('log', (event: any) => {\n            if (event.data) {\n              try {\n                subscriber.next(JSON.parse(event.data));\n              } catch (ex) {\n                subscriber.error(ex);\n              }\n            }\n          });\n          eventSource.addEventListener('completion', (event: any) => {\n            if (event.data) {\n              try {\n                subscriber.next(JSON.parse(event.data));\n              } catch (ex) {\n                subscriber.error(ex);\n              }\n            }\n            eventSource.close();\n            subscriber.complete();\n          });\n          eventSource.addEventListener('error', event => {\n            subscriber.error(event);\n          });\n        },\n        error => {\n          subscriber.error(error);\n        },\n      );\n    });\n  }\n\n  private streamLogsPolling({\n    taskId,\n    after: inputAfter,\n  }: {\n    taskId: string;\n    after?: number;\n  }): Observable<LogEvent> {\n    let after = inputAfter;\n\n    return new ObservableImpl(subscriber => {\n      this.discoveryApi.getBaseUrl('scaffolder').then(async baseUrl => {\n        while (!subscriber.closed) {\n          const url = `${baseUrl}/v2/tasks/${encodeURIComponent(\n            taskId,\n          )}/events?${qs.stringify({ after })}`;\n          const response = await this.fetchApi.fetch(url);\n\n          if (!response.ok) {\n            // wait for one second to not run into an\n            await new Promise(resolve => setTimeout(resolve, 1000));\n            continue;\n          }\n\n          const logs = (await response.json()) as LogEvent[];\n\n          for (const event of logs) {\n            after = Number(event.id);\n\n            subscriber.next(event);\n\n            if (event.type === 'completion') {\n              subscriber.complete();\n              return;\n            }\n          }\n        }\n      });\n    });\n  }\n\n  async listActions(): Promise<ListActionsResponse> {\n    const baseUrl = await this.discoveryApi.getBaseUrl('scaffolder');\n    const response = await this.fetchApi.fetch(`${baseUrl}/v2/actions`);\n    if (!response.ok) {\n      throw await ResponseError.fromResponse(response);\n    }\n\n    return await response.json();\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { useApi } from '@backstage/core-plugin-api';\nimport {\n  catalogApiRef,\n  humanizeEntityRef,\n} from '@backstage/plugin-catalog-react';\nimport { TextField } from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport React, { useCallback, useEffect } from 'react';\nimport useAsync from 'react-use/lib/useAsync';\nimport { FieldExtensionComponentProps } from '../../../extensions';\n\n/**\n * The input props that can be specified under `ui:options` for the\n * `EntityPicker` field extension.\n *\n * @public\n */\nexport interface EntityPickerUiOptions {\n  allowedKinds?: string[];\n  defaultKind?: string;\n  allowArbitraryValues?: boolean;\n}\n\n/**\n * The underlying component that is rendered in the form for the `EntityPicker`\n * field extension.\n *\n * @public\n */\nexport const EntityPicker = (\n  props: FieldExtensionComponentProps<string, EntityPickerUiOptions>,\n) => {\n  const {\n    onChange,\n    schema: { title = 'Entity', description = 'An entity from the catalog' },\n    required,\n    uiSchema,\n    rawErrors,\n    formData,\n    idSchema,\n  } = props;\n  const allowedKinds = uiSchema['ui:options']?.allowedKinds;\n  const defaultKind = uiSchema['ui:options']?.defaultKind;\n\n  const catalogApi = useApi(catalogApiRef);\n\n  const { value: entities, loading } = useAsync(() =>\n    catalogApi.getEntities(\n      allowedKinds ? { filter: { kind: allowedKinds } } : undefined,\n    ),\n  );\n\n  const entityRefs = entities?.items.map(e =>\n    humanizeEntityRef(e, { defaultKind }),\n  );\n\n  const onSelect = useCallback(\n    (_: any, value: string | null) => {\n      onChange(value || '');\n    },\n    [onChange],\n  );\n\n  useEffect(() => {\n    if (entityRefs?.length === 1) {\n      onChange(entityRefs[0]);\n    }\n  }, [entityRefs, onChange]);\n\n  return (\n    <FormControl\n      margin=\"normal\"\n      required={required}\n      error={rawErrors?.length > 0 && !formData}\n    >\n      <Autocomplete\n        disabled={entityRefs?.length === 1}\n        id={idSchema?.$id}\n        value={(formData as string) || ''}\n        loading={loading}\n        onChange={onSelect}\n        options={entityRefs || []}\n        autoSelect\n        freeSolo={uiSchema['ui:options']?.allowArbitraryValues ?? true}\n        renderInput={params => (\n          <TextField\n            {...params}\n            label={title}\n            margin=\"normal\"\n            helperText={description}\n            variant=\"outlined\"\n            required={required}\n            InputProps={params.InputProps}\n          />\n        )}\n      />\n    </FormControl>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\nimport { FieldExtensionComponentProps } from '../../../extensions';\nimport { TextField } from '@material-ui/core';\n\n/**\n * EntityName Picker\n */\nexport const EntityNamePicker = (\n  props: FieldExtensionComponentProps<string>,\n) => {\n  const {\n    onChange,\n    required,\n    schema: { title = 'Name', description = 'Unique name of the component' },\n    rawErrors,\n    formData,\n    uiSchema: { 'ui:autofocus': autoFocus },\n    idSchema,\n    placeholder,\n  } = props;\n\n  return (\n    <TextField\n      id={idSchema?.$id}\n      label={title}\n      placeholder={placeholder}\n      helperText={description}\n      required={required}\n      value={formData ?? ''}\n      onChange={({ target: { value } }) => onChange(value)}\n      margin=\"normal\"\n      error={rawErrors?.length > 0 && !formData}\n      inputProps={{ autoFocus }}\n    />\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FieldValidation } from '@rjsf/core';\nimport { KubernetesValidatorFunctions } from '@backstage/catalog-model';\n\nexport const entityNamePickerValidation = (\n  value: string,\n  validation: FieldValidation,\n) => {\n  if (!KubernetesValidatorFunctions.isValidObjectName(value)) {\n    validation.addError(\n      'must start and end with an alphanumeric character, and contain only alphanumeric characters, hyphens, underscores, and periods. Maximum length is 63 characters.',\n    );\n  }\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React, { useState } from 'react';\nimport useAsync from 'react-use/lib/useAsync';\nimport useEffectOnce from 'react-use/lib/useEffectOnce';\nimport { GetEntitiesRequest } from '@backstage/catalog-client';\nimport { Entity, makeValidator } from '@backstage/catalog-model';\nimport { useApi } from '@backstage/core-plugin-api';\nimport { catalogApiRef } from '@backstage/plugin-catalog-react';\nimport { FormControl, TextField } from '@material-ui/core';\nimport { Autocomplete } from '@material-ui/lab';\nimport { FieldExtensionComponentProps } from '../../../extensions';\n\n/**\n * The input props that can be specified under `ui:options` for the\n * `EntityTagsPicker` field extension.\n *\n * @public\n */\nexport interface EntityTagsPickerUiOptions {\n  kinds?: string[];\n}\n\n/**\n * The underlying component that is rendered in the form for the `EntityTagsPicker`\n * field extension.\n *\n * @public\n */\nexport const EntityTagsPicker = (\n  props: FieldExtensionComponentProps<string[], EntityTagsPickerUiOptions>,\n) => {\n  const { formData, onChange, uiSchema } = props;\n  const catalogApi = useApi(catalogApiRef);\n  const [inputValue, setInputValue] = useState('');\n  const [inputError, setInputError] = useState(false);\n  const tagValidator = makeValidator().isValidTag;\n  const kinds = uiSchema['ui:options']?.kinds;\n\n  const { loading, value: existingTags } = useAsync(async () => {\n    const tagsRequest: GetEntitiesRequest = { fields: ['metadata.tags'] };\n    if (kinds) {\n      tagsRequest.filter = { kind: kinds };\n    }\n\n    const entities = await catalogApi.getEntities(tagsRequest);\n\n    return [\n      ...new Set(\n        entities.items\n          .flatMap((e: Entity) => e.metadata?.tags)\n          .filter(Boolean) as string[],\n      ),\n    ].sort();\n  });\n\n  const setTags = (_: React.ChangeEvent<{}>, values: string[] | null) => {\n    // Reset error state in case all tags were removed\n    let hasError = false;\n    let addDuplicate = false;\n    const currentTags = formData || [];\n\n    // If adding a new tag\n    if (values?.length && currentTags.length < values.length) {\n      const newTag = (values[values.length - 1] = values[values.length - 1]\n        .toLocaleLowerCase('en-US')\n        .trim());\n      hasError = !tagValidator(newTag);\n      addDuplicate = currentTags.indexOf(newTag) !== -1;\n    }\n\n    setInputError(hasError);\n    setInputValue(!hasError ? '' : inputValue);\n    if (!hasError && !addDuplicate) {\n      onChange(values || []);\n    }\n  };\n\n  // Initialize field to always return an array\n  useEffectOnce(() => onChange(formData || []));\n\n  return (\n    <FormControl margin=\"normal\">\n      <Autocomplete\n        multiple\n        freeSolo\n        filterSelectedOptions\n        onChange={setTags}\n        value={formData || []}\n        inputValue={inputValue}\n        loading={loading}\n        options={existingTags || []}\n        ChipProps={{ size: 'small' }}\n        renderInput={params => (\n          <TextField\n            {...params}\n            label=\"Tags\"\n            onChange={e => setInputValue(e.target.value)}\n            error={inputError}\n            helperText=\"Add any relevant tags, hit 'Enter' to add new tags. Valid format: [a-z0-9+#] separated by [-], at most 63 characters\"\n          />\n        )}\n      />\n    </FormControl>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\nimport { EntityPicker } from '../EntityPicker/EntityPicker';\nimport { FieldExtensionComponentProps } from '../../../extensions';\n\n/**\n * The input props that can be specified under `ui:options` for the\n * `OwnerPicker` field extension.\n *\n * @public\n */\nexport interface OwnerPickerUiOptions {\n  allowedKinds?: string[];\n}\n\n/**\n * The underlying component that is rendered in the form for the `OwnerPicker`\n * field extension.\n *\n * @public\n */\nexport const OwnerPicker = (\n  props: FieldExtensionComponentProps<string, OwnerPickerUiOptions>,\n) => {\n  const {\n    schema: { title = 'Owner', description = 'The owner of the component' },\n    uiSchema,\n    ...restProps\n  } = props;\n\n  const ownerUiSchema = {\n    ...uiSchema,\n    'ui:options': {\n      allowedKinds: (uiSchema['ui:options']?.allowedKinds || [\n        'Group',\n        'User',\n      ]) as string[],\n      defaultKind: 'Group',\n    },\n  };\n\n  return (\n    <EntityPicker\n      {...restProps}\n      schema={{ title, description }}\n      uiSchema={ownerUiSchema}\n    />\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { Select, SelectItem } from '@backstage/core-components';\nimport { RepoUrlPickerState } from './types';\n\nexport const GithubRepoPicker = (props: {\n  allowedOwners?: string[];\n  rawErrors: string[];\n  state: RepoUrlPickerState;\n  onChange: (state: RepoUrlPickerState) => void;\n}) => {\n  const { allowedOwners = [], rawErrors, state, onChange } = props;\n  const ownerItems: SelectItem[] = allowedOwners\n    ? allowedOwners.map(i => ({ label: i, value: i }))\n    : [{ label: 'Loading...', value: 'loading' }];\n\n  const { owner, repoName } = state;\n\n  return (\n    <>\n      <FormControl\n        margin=\"normal\"\n        required\n        error={rawErrors?.length > 0 && !owner}\n      >\n        {allowedOwners?.length ? (\n          <Select\n            native\n            label=\"Owner Available\"\n            onChange={s =>\n              onChange({ owner: String(Array.isArray(s) ? s[0] : s) })\n            }\n            disabled={allowedOwners.length === 1}\n            selected={owner}\n            items={ownerItems}\n          />\n        ) : (\n          <>\n            <InputLabel htmlFor=\"ownerInput\">Owner</InputLabel>\n            <Input\n              id=\"ownerInput\"\n              onChange={e => onChange({ owner: e.target.value })}\n              value={owner}\n            />\n          </>\n        )}\n        <FormHelperText>\n          The organization, user or project that this repo will belong to\n        </FormHelperText>\n      </FormControl>\n      <FormControl\n        margin=\"normal\"\n        required\n        error={rawErrors?.length > 0 && !repoName}\n      >\n        <InputLabel htmlFor=\"repoNameInput\">Repository</InputLabel>\n        <Input\n          id=\"repoNameInput\"\n          onChange={e => onChange({ repoName: e.target.value })}\n          value={repoName}\n        />\n        <FormHelperText>The name of the repository</FormHelperText>\n      </FormControl>\n    </>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { Select, SelectItem } from '@backstage/core-components';\nimport { RepoUrlPickerState } from './types';\n\nexport const GitlabRepoPicker = (props: {\n  allowedOwners?: string[];\n  state: RepoUrlPickerState;\n  onChange: (state: RepoUrlPickerState) => void;\n  rawErrors: string[];\n}) => {\n  const { allowedOwners = [], rawErrors, state, onChange } = props;\n  const ownerItems: SelectItem[] = allowedOwners\n    ? allowedOwners.map(i => ({ label: i, value: i }))\n    : [{ label: 'Loading...', value: 'loading' }];\n\n  const { owner, repoName } = state;\n\n  return (\n    <>\n      <FormControl\n        margin=\"normal\"\n        required\n        error={rawErrors?.length > 0 && !owner}\n      >\n        {allowedOwners?.length ? (\n          <Select\n            native\n            label=\"Owner Available\"\n            onChange={selected =>\n              onChange({\n                owner: String(Array.isArray(selected) ? selected[0] : selected),\n              })\n            }\n            disabled={allowedOwners.length === 1}\n            selected={owner}\n            items={ownerItems}\n          />\n        ) : (\n          <>\n            <InputLabel htmlFor=\"ownerInput\">Owner</InputLabel>\n            <Input\n              id=\"ownerInput\"\n              onChange={e => onChange({ owner: e.target.value })}\n              value={owner}\n            />\n          </>\n        )}\n        <FormHelperText>\n          The organization, user or project that this repo will belong to\n        </FormHelperText>\n      </FormControl>\n      <FormControl\n        margin=\"normal\"\n        required\n        error={rawErrors?.length > 0 && !repoName}\n      >\n        <InputLabel htmlFor=\"repoNameInput\">Repository</InputLabel>\n        <Input\n          id=\"repoNameInput\"\n          onChange={e => onChange({ repoName: e.target.value })}\n          value={repoName}\n        />\n        <FormHelperText>The name of the repository</FormHelperText>\n      </FormControl>\n    </>\n  );\n};\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { RepoUrlPickerState } from './types';\n\nexport const AzureRepoPicker = (props: {\n  state: RepoUrlPickerState;\n  onChange: (state: RepoUrlPickerState) => void;\n  rawErrors: string[];\n}) => {\n  const { rawErrors, state, onChange } = props;\n  const { organization, repoName, owner } = state;\n  return (\n    <>\n      <FormControl\n        margin=\"normal\"\n        required\n        error={rawErrors?.length > 0 && !organization}\n      >\n        <InputLabel htmlFor=\"orgInput\">Organization</InputLabel>\n        <Input\n          id=\"orgInput\"\n          onChange={e => onChange({ organization: e.target.value })}\n          value={organization}\n        />\n        <FormHelperText>\n          The organization that this repo will belong to\n        </FormHelperText>\n      </FormControl>\n      <FormControl\n        margin=\"normal\"\n        required\n        error={rawErrors?.length > 0 && !owner}\n      >\n        <InputLabel htmlFor=\"ownerInput\">Owner</InputLabel>\n        <Input\n          id=\"ownerInput\"\n          onChange={e => onChange({ owner: e.target.value })}\n          value={owner}\n        />\n        <FormHelperText>The Owner that this repo will belong to</FormHelperText>\n      </FormControl>\n      <FormControl\n        margin=\"normal\"\n        required\n        error={rawErrors?.length > 0 && !repoName}\n      >\n        <InputLabel htmlFor=\"repoNameInput\">Repository</InputLabel>\n        <Input\n          id=\"repoNameInput\"\n          onChange={e => onChange({ repoName: e.target.value })}\n          value={repoName}\n        />\n        <FormHelperText>The name of the repository</FormHelperText>\n      </FormControl>\n    </>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { RepoUrlPickerState } from './types';\n\nexport const BitbucketRepoPicker = (props: {\n  onChange: (state: RepoUrlPickerState) => void;\n  state: RepoUrlPickerState;\n  rawErrors: string[];\n}) => {\n  const { onChange, rawErrors, state } = props;\n  const { host, workspace, project, repoName } = state;\n  return (\n    <>\n      {host === 'bitbucket.org' && (\n        <FormControl\n          margin=\"normal\"\n          required\n          error={rawErrors?.length > 0 && !workspace}\n        >\n          <InputLabel htmlFor=\"workspaceInput\">Workspace</InputLabel>\n          <Input\n            id=\"workspaceInput\"\n            onChange={e => onChange({ workspace: e.target.value })}\n            value={workspace}\n          />\n          <FormHelperText>\n            The Organization that this repo will belong to\n          </FormHelperText>\n        </FormControl>\n      )}\n      <FormControl\n        margin=\"normal\"\n        required\n        error={rawErrors?.length > 0 && !project}\n      >\n        <InputLabel htmlFor=\"projectInput\">Project</InputLabel>\n        <Input\n          id=\"projectInput\"\n          onChange={e => onChange({ project: e.target.value })}\n          value={project}\n        />\n        <FormHelperText>\n          The Project that this repo will belong to\n        </FormHelperText>\n      </FormControl>\n      <FormControl\n        margin=\"normal\"\n        required\n        error={rawErrors?.length > 0 && !repoName}\n      >\n        <InputLabel htmlFor=\"repoNameInput\">Repository</InputLabel>\n        <Input\n          id=\"repoNameInput\"\n          onChange={e => onChange({ repoName: e.target.value })}\n          value={repoName}\n        />\n        <FormHelperText>The name of the repository</FormHelperText>\n      </FormControl>\n    </>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React, { useEffect } from 'react';\nimport { Progress, Select, SelectItem } from '@backstage/core-components';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { useApi } from '@backstage/core-plugin-api';\nimport { scaffolderApiRef } from '../../../api';\nimport useAsync from 'react-use/lib/useAsync';\n\nexport const RepoUrlPickerHost = (props: {\n  host?: string;\n  hosts?: string[];\n  onChange: (host: string) => void;\n  rawErrors: string[];\n}) => {\n  const { host, hosts, onChange, rawErrors } = props;\n  const scaffolderApi = useApi(scaffolderApiRef);\n\n  const { value: { integrations } = { integrations: [] }, loading } = useAsync(\n    async () => {\n      return await scaffolderApi.getIntegrationsList({\n        allowedHosts: hosts ?? [],\n      });\n    },\n  );\n\n  useEffect(() => {\n    // If there is no host chosen currently\n    if (!host) {\n      // Set the first of the allowedHosts option if that available\n      if (hosts?.length) {\n        onChange(hosts[0]);\n        // if there's no hosts provided, fallback to using the first integration\n      } else if (integrations?.length) {\n        onChange(integrations[0].host);\n      }\n    }\n  }, [hosts, host, onChange, integrations]);\n\n  // If there are no allowedHosts provided, then show all integrations. Otherwise, only show integrations\n  // that are provided in the dropdown for the user to choose from.\n  const hostsOptions: SelectItem[] = integrations\n    ? integrations\n        .filter(i => (hosts?.length ? hosts?.includes(i.host) : true))\n        .map(i => ({ label: i.title, value: i.host }))\n    : [{ label: 'Loading...', value: 'loading' }];\n\n  if (loading) {\n    return <Progress />;\n  }\n\n  return (\n    <>\n      <FormControl\n        margin=\"normal\"\n        required\n        error={rawErrors?.length > 0 && !host}\n      >\n        <Select\n          native\n          disabled={hosts?.length === 1 ?? false}\n          label=\"Host\"\n          onChange={s => onChange(String(Array.isArray(s) ? s[0] : s))}\n          selected={host}\n          items={hostsOptions}\n          data-testid=\"host-select\"\n        />\n\n        <FormHelperText>\n          The host where the repository will be created\n        </FormHelperText>\n      </FormControl>\n    </>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoUrlPickerState } from './types';\n\nexport function serializeRepoPickerUrl(data: RepoUrlPickerState) {\n  if (!data.host) {\n    return undefined;\n  }\n\n  const params = new URLSearchParams();\n  if (data.owner) {\n    params.set('owner', data.owner);\n  }\n  if (data.repoName) {\n    params.set('repo', data.repoName);\n  }\n  if (data.organization) {\n    params.set('organization', data.organization);\n  }\n  if (data.workspace) {\n    params.set('workspace', data.workspace);\n  }\n  if (data.project) {\n    params.set('project', data.project);\n  }\n\n  return `${data.host}?${params.toString()}`;\n}\n\nexport function parseRepoPickerUrl(\n  url: string | undefined,\n): RepoUrlPickerState {\n  let host = '';\n  let owner = '';\n  let repoName = '';\n  let organization = '';\n  let workspace = '';\n  let project = '';\n\n  try {\n    if (url) {\n      const parsed = new URL(`https://${url}`);\n      host = parsed.host;\n      owner = parsed.searchParams.get('owner') || '';\n      repoName = parsed.searchParams.get('repo') || '';\n      organization = parsed.searchParams.get('organization') || '';\n      workspace = parsed.searchParams.get('workspace') || '';\n      project = parsed.searchParams.get('project') || '';\n    }\n  } catch {\n    /* ok */\n  }\n\n  return { host, owner, repoName, organization, workspace, project };\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React, {\n  useState,\n  useCallback,\n  useContext,\n  createContext,\n  PropsWithChildren,\n} from 'react';\n\ntype SecretsContextContents = {\n  secrets: Record<string, string>;\n  setSecrets: React.Dispatch<React.SetStateAction<Record<string, string>>>;\n};\n\n/**\n * The actual context object.\n */\nexport const SecretsContext = createContext<SecretsContextContents | undefined>(\n  undefined,\n);\n\n/**\n * The Context Provider that holds the state for the secrets.\n *\n * @public\n */\nexport const SecretsContextProvider = ({ children }: PropsWithChildren<{}>) => {\n  const [secrets, setSecrets] = useState<Record<string, string>>({});\n\n  return (\n    <SecretsContext.Provider value={{ secrets, setSecrets }}>\n      {children}\n    </SecretsContext.Provider>\n  );\n};\n\n/**\n * The return type from the useTemplateSecrets hook.\n * @public\n */\nexport interface ScaffolderUseTemplateSecrets {\n  setSecrets: (input: Record<string, string>) => void;\n}\n\n/**\n * Hook to access the secrets context.\n * @public\n */\nexport const useTemplateSecrets = (): ScaffolderUseTemplateSecrets => {\n  const value = useContext(SecretsContext);\n  if (!value) {\n    throw new Error(\n      'useTemplateSecrets must be used within a SecretsContextProvider',\n    );\n  }\n\n  const { setSecrets: updateSecrets } = value;\n\n  const setSecrets = useCallback(\n    (input: Record<string, string>) => {\n      updateSecrets(currentSecrets => ({ ...currentSecrets, ...input }));\n    },\n    [updateSecrets],\n  );\n\n  return { setSecrets };\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { useApi } from '@backstage/core-plugin-api';\nimport {\n  scmIntegrationsApiRef,\n  scmAuthApiRef,\n} from '@backstage/integration-react';\nimport React, { useEffect, useState, useMemo, useCallback } from 'react';\nimport { GithubRepoPicker } from './GithubRepoPicker';\nimport { GitlabRepoPicker } from './GitlabRepoPicker';\nimport { AzureRepoPicker } from './AzureRepoPicker';\nimport { BitbucketRepoPicker } from './BitbucketRepoPicker';\nimport { FieldExtensionComponentProps } from '../../../extensions';\nimport { RepoUrlPickerHost } from './RepoUrlPickerHost';\nimport { parseRepoPickerUrl, serializeRepoPickerUrl } from './utils';\nimport { RepoUrlPickerState } from './types';\nimport useDebounce from 'react-use/lib/useDebounce';\nimport { useTemplateSecrets } from '../../secrets';\n\n/**\n * The input props that can be specified under `ui:options` for the\n * `RepoUrlPicker` field extension.\n *\n * @public\n */\nexport interface RepoUrlPickerUiOptions {\n  allowedHosts?: string[];\n  allowedOwners?: string[];\n  requestUserCredentials?: {\n    secretsKey: string;\n    additionalScopes?: {\n      github?: string[];\n      gitlab?: string[];\n      bitbucket?: string[];\n      azure?: string[];\n    };\n  };\n}\n\n/**\n * The underlying component that is rendered in the form for the `RepoUrlPicker`\n * field extension.\n *\n * @public\n */\nexport const RepoUrlPicker = (\n  props: FieldExtensionComponentProps<string, RepoUrlPickerUiOptions>,\n) => {\n  const { uiSchema, onChange, rawErrors, formData } = props;\n  const [state, setState] = useState<RepoUrlPickerState>(\n    parseRepoPickerUrl(formData),\n  );\n  const integrationApi = useApi(scmIntegrationsApiRef);\n  const scmAuthApi = useApi(scmAuthApiRef);\n  const { setSecrets } = useTemplateSecrets();\n  const allowedHosts = useMemo(\n    () => uiSchema?.['ui:options']?.allowedHosts ?? [],\n    [uiSchema],\n  );\n  const allowedOwners = useMemo(\n    () => uiSchema?.['ui:options']?.allowedOwners ?? [],\n    [uiSchema],\n  );\n\n  useEffect(() => {\n    onChange(serializeRepoPickerUrl(state));\n  }, [state, onChange]);\n\n  /* we deal with calling the repo setting here instead of in each components for ease */\n  useEffect(() => {\n    if (allowedOwners.length === 1) {\n      setState(prevState => ({ ...prevState, owner: allowedOwners[0] }));\n    }\n  }, [setState, allowedOwners]);\n\n  const updateLocalState = useCallback(\n    (newState: RepoUrlPickerState) => {\n      setState(prevState => ({ ...prevState, ...newState }));\n    },\n    [setState],\n  );\n\n  useDebounce(\n    async () => {\n      const { requestUserCredentials } = uiSchema?.['ui:options'] ?? {};\n\n      if (\n        !requestUserCredentials ||\n        !(state.host && state.owner && state.repoName)\n      ) {\n        return;\n      }\n\n      const [host, owner, repoName] = [\n        state.host,\n        state.owner,\n        state.repoName,\n      ].map(encodeURIComponent);\n\n      // user has requested that we use the users credentials\n      // so lets grab them using the scmAuthApi and pass through\n      // any additional scopes from the ui:options\n      const { token } = await scmAuthApi.getCredentials({\n        url: `https://${host}/${owner}/${repoName}`,\n        additionalScope: {\n          repoWrite: true,\n          customScopes: requestUserCredentials.additionalScopes,\n        },\n      });\n\n      // set the secret using the key provided in the the ui:options for use\n      // in the templating the manifest with ${{ secrets[secretsKey] }}\n      setSecrets({ [requestUserCredentials.secretsKey]: token });\n    },\n    500,\n    [state, uiSchema],\n  );\n\n  const hostType =\n    (state.host && integrationApi.byHost(state.host)?.type) ?? null;\n\n  return (\n    <>\n      <RepoUrlPickerHost\n        host={state.host}\n        hosts={allowedHosts}\n        onChange={host => setState(prevState => ({ ...prevState, host }))}\n        rawErrors={rawErrors}\n      />\n      {hostType === 'github' && (\n        <GithubRepoPicker\n          allowedOwners={allowedOwners}\n          rawErrors={rawErrors}\n          state={state}\n          onChange={updateLocalState}\n        />\n      )}\n      {hostType === 'gitlab' && (\n        <GitlabRepoPicker\n          allowedOwners={allowedOwners}\n          rawErrors={rawErrors}\n          state={state}\n          onChange={updateLocalState}\n        />\n      )}\n      {hostType === 'bitbucket' && (\n        <BitbucketRepoPicker\n          rawErrors={rawErrors}\n          state={state}\n          onChange={updateLocalState}\n        />\n      )}\n      {hostType === 'azure' && (\n        <AzureRepoPicker\n          rawErrors={rawErrors}\n          state={state}\n          onChange={updateLocalState}\n        />\n      )}\n    </>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FieldValidation } from '@rjsf/core';\nimport { ApiHolder } from '@backstage/core-plugin-api';\nimport { scmIntegrationsApiRef } from '@backstage/integration-react';\n\n/**\n * The validation function for the `repoUrl` that is returned from the\n * field extension. Ensures that you have all the required fields filled for\n * the different providers that exist.\n *\n * @public\n */\nexport const repoPickerValidation = (\n  value: string,\n  validation: FieldValidation,\n  context: { apiHolder: ApiHolder },\n) => {\n  try {\n    const { host, searchParams } = new URL(`https://${value}`);\n\n    const integrationApi = context.apiHolder.get(scmIntegrationsApiRef);\n\n    if (!host) {\n      validation.addError(\n        'Incomplete repository location provided, host not provided',\n      );\n    } else {\n      if (integrationApi?.byHost(host)?.type === 'bitbucket') {\n        // workspace is only applicable for bitbucket cloud\n        if (host === 'bitbucket.org' && !searchParams.get('workspace')) {\n          validation.addError(\n            'Incomplete repository location provided, workspace not provided',\n          );\n        }\n\n        if (!searchParams.get('project')) {\n          validation.addError(\n            'Incomplete repository location provided, project not provided',\n          );\n        }\n      }\n      // For anything other than bitbucket\n      else {\n        if (!searchParams.get('owner')) {\n          validation.addError(\n            'Incomplete repository location provided, owner not provided',\n          );\n        }\n      }\n\n      // Do this for all hosts\n      if (!searchParams.get('repo')) {\n        validation.addError(\n          'Incomplete repository location provided, repo not provided',\n        );\n      }\n    }\n  } catch {\n    validation.addError('Unable to parse the Repository URL');\n  }\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { GetEntitiesResponse } from '@backstage/catalog-client';\nimport { RELATION_OWNED_BY } from '@backstage/catalog-model';\nimport { identityApiRef, useApi } from '@backstage/core-plugin-api';\nimport {\n  catalogApiRef,\n  humanizeEntityRef,\n} from '@backstage/plugin-catalog-react';\nimport { TextField } from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport React, { useMemo } from 'react';\nimport useAsync from 'react-use/lib/useAsync';\n\nimport { FieldExtensionComponentProps } from '../../../extensions';\n\n/**\n * The input props that can be specified under `ui:options` for the\n * `OwnedEntityPicker` field extension.\n *\n * @public\n */\nexport interface OwnedEntityPickerUiOptions {\n  allowedKinds?: string[];\n  defaultKind?: string;\n}\n\n/**\n * The underlying component that is rendered in the form for the `OwnedEntityPicker`\n * field extension.\n *\n * @public\n */\nexport const OwnedEntityPicker = (\n  props: FieldExtensionComponentProps<string, OwnedEntityPickerUiOptions>,\n) => {\n  const {\n    onChange,\n    schema: { title = 'Entity', description = 'An entity from the catalog' },\n    required,\n    uiSchema,\n    rawErrors,\n    formData,\n    idSchema,\n  } = props;\n\n  const allowedKinds = uiSchema['ui:options']?.allowedKinds;\n  const defaultKind = uiSchema['ui:options']?.defaultKind;\n  const { ownedEntities, loading } = useOwnedEntities(allowedKinds);\n\n  const entityRefs = ownedEntities?.items\n    .map(e => humanizeEntityRef(e, { defaultKind }))\n    .filter(n => n);\n\n  const onSelect = (_: any, value: string | null) => {\n    onChange(value || '');\n  };\n\n  return (\n    <FormControl\n      margin=\"normal\"\n      required={required}\n      error={rawErrors?.length > 0 && !formData}\n    >\n      <Autocomplete\n        id={idSchema?.$id}\n        value={(formData as string) || ''}\n        loading={loading}\n        onChange={onSelect}\n        options={entityRefs || []}\n        autoSelect\n        freeSolo\n        renderInput={params => (\n          <TextField\n            {...params}\n            label={title}\n            margin=\"normal\"\n            helperText={description}\n            variant=\"outlined\"\n            required={required}\n            InputProps={params.InputProps}\n          />\n        )}\n      />\n    </FormControl>\n  );\n};\n\n/**\n * Takes the relevant parts of the Backstage identity, and translates them into\n * a list of entities which are owned by the user. Takes an optional parameter\n * to filter the entities based on allowedKinds\n *\n *\n * @param allowedKinds - Array of allowed kinds to filter the entities\n */\nfunction useOwnedEntities(allowedKinds?: string[]): {\n  loading: boolean;\n  ownedEntities: GetEntitiesResponse | undefined;\n} {\n  const identityApi = useApi(identityApiRef);\n  const catalogApi = useApi(catalogApiRef);\n\n  const { loading, value: refs } = useAsync(async () => {\n    const identity = await identityApi.getBackstageIdentity();\n    const identityRefs = identity.ownershipEntityRefs;\n    const catalogs = await catalogApi.getEntities(\n      allowedKinds\n        ? {\n            filter: {\n              kind: allowedKinds,\n              [`relations.${RELATION_OWNED_BY}`]: identityRefs || [],\n            },\n          }\n        : {\n            filter: {\n              [`relations.${RELATION_OWNED_BY}`]: identityRefs || [],\n            },\n          },\n    );\n    return catalogs;\n  }, []);\n\n  const ownedEntities = useMemo(() => {\n    return refs;\n  }, [refs]);\n\n  return useMemo(() => ({ loading, ownedEntities }), [loading, ownedEntities]);\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport {\n  CustomFieldValidator,\n  FieldExtensionOptions,\n  FieldExtensionComponentProps,\n} from './types';\nimport { Extension, attachComponentData } from '@backstage/core-plugin-api';\n\nexport const FIELD_EXTENSION_WRAPPER_KEY = 'scaffolder.extensions.wrapper.v1';\nexport const FIELD_EXTENSION_KEY = 'scaffolder.extensions.field.v1';\n\n/**\n * A type used to wrap up the FieldExtension to embed the ReturnValue and the InputProps\n *\n * @public\n */\nexport type FieldExtensionComponent<_TReturnValue, _TInputProps> = () => null;\n\n/**\n * Method for creating field extensions that can be used in the scaffolder\n * frontend form.\n * @public\n */\nexport function createScaffolderFieldExtension<\n  TReturnValue = unknown,\n  TInputProps = unknown,\n>(\n  options: FieldExtensionOptions<TReturnValue, TInputProps>,\n): Extension<FieldExtensionComponent<TReturnValue, TInputProps>> {\n  return {\n    expose() {\n      const FieldExtensionDataHolder: any = () => null;\n\n      attachComponentData(\n        FieldExtensionDataHolder,\n        FIELD_EXTENSION_KEY,\n        options,\n      );\n\n      return FieldExtensionDataHolder;\n    },\n  };\n}\n\n/**\n * The Wrapping component for defining fields extensions inside\n *\n * @public\n */\nexport const ScaffolderFieldExtensions: React.ComponentType =\n  (): JSX.Element | null => null;\n\nattachComponentData(\n  ScaffolderFieldExtensions,\n  FIELD_EXTENSION_WRAPPER_KEY,\n  true,\n);\n\nexport type {\n  CustomFieldValidator,\n  FieldExtensionOptions,\n  FieldExtensionComponentProps,\n};\n\nexport { DEFAULT_SCAFFOLDER_FIELD_EXTENSIONS } from './default';\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  createExternalRouteRef,\n  createRouteRef,\n  createSubRouteRef,\n} from '@backstage/core-plugin-api';\n\nexport const registerComponentRouteRef = createExternalRouteRef({\n  id: 'register-component',\n  optional: true,\n});\n\nexport const rootRouteRef = createRouteRef({\n  id: 'scaffolder',\n});\n\nexport const selectedTemplateRouteRef = createSubRouteRef({\n  id: 'scaffolder/selected-template',\n  parent: rootRouteRef,\n  path: '/templates/:templateName',\n});\n\nexport const scaffolderTaskRouteRef = createSubRouteRef({\n  id: 'scaffolder/task',\n  parent: rootRouteRef,\n  path: '/tasks/:taskId',\n});\n\nexport const actionsRouteRef = createSubRouteRef({\n  id: 'scaffolder/actions',\n  parent: rootRouteRef,\n  path: '/actions',\n});\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { scmIntegrationsApiRef } from '@backstage/integration-react';\nimport { scaffolderApiRef, ScaffolderClient } from './api';\nimport { EntityPicker } from './components/fields/EntityPicker/EntityPicker';\nimport { entityNamePickerValidation } from './components/fields/EntityNamePicker';\nimport { EntityNamePicker } from './components/fields/EntityNamePicker/EntityNamePicker';\nimport { OwnerPicker } from './components/fields/OwnerPicker/OwnerPicker';\nimport { repoPickerValidation } from './components/fields/RepoUrlPicker';\nimport { RepoUrlPicker } from './components/fields/RepoUrlPicker/RepoUrlPicker';\nimport { createScaffolderFieldExtension } from './extensions';\nimport { registerComponentRouteRef, rootRouteRef } from './routes';\nimport {\n  createApiFactory,\n  createPlugin,\n  createRoutableExtension,\n  discoveryApiRef,\n  fetchApiRef,\n} from '@backstage/core-plugin-api';\nimport { OwnedEntityPicker } from './components/fields/OwnedEntityPicker/OwnedEntityPicker';\nimport { EntityTagsPicker } from './components/fields/EntityTagsPicker/EntityTagsPicker';\n\n/**\n * The main plugin export for the scaffolder.\n * @public\n */\nexport const scaffolderPlugin = createPlugin({\n  id: 'scaffolder',\n  apis: [\n    createApiFactory({\n      api: scaffolderApiRef,\n      deps: {\n        discoveryApi: discoveryApiRef,\n        scmIntegrationsApi: scmIntegrationsApiRef,\n        fetchApi: fetchApiRef,\n      },\n      factory: ({ discoveryApi, scmIntegrationsApi, fetchApi }) =>\n        new ScaffolderClient({\n          discoveryApi,\n          scmIntegrationsApi,\n          fetchApi,\n        }),\n    }),\n  ],\n  routes: {\n    root: rootRouteRef,\n  },\n  externalRoutes: {\n    registerComponent: registerComponentRouteRef,\n  },\n});\n\n/**\n * A field extension for selecting an Entity that exists in the Catalog.\n *\n * @public\n */\nexport const EntityPickerFieldExtension = scaffolderPlugin.provide(\n  createScaffolderFieldExtension({\n    component: EntityPicker,\n    name: 'EntityPicker',\n  }),\n);\n\n/**\n * The field extension for selecting a name for a new Entity in the Catalog.\n *\n * @public\n */\nexport const EntityNamePickerFieldExtension = scaffolderPlugin.provide(\n  createScaffolderFieldExtension({\n    component: EntityNamePicker,\n    name: 'EntityNamePicker',\n    validation: entityNamePickerValidation,\n  }),\n);\n\n/**\n * The field extension which provides the ability to select a RepositoryUrl.\n * Currently this is an encoded URL that looks something like the following `github.com?repo=myRepoName&owner=backstage`.\n *\n * @public\n */\nexport const RepoUrlPickerFieldExtension = scaffolderPlugin.provide(\n  createScaffolderFieldExtension({\n    component: RepoUrlPicker,\n    name: 'RepoUrlPicker',\n    validation: repoPickerValidation,\n  }),\n);\n\n/**\n * A field extension for picking users and groups out of the Catalog.\n *\n * @public\n */\nexport const OwnerPickerFieldExtension = scaffolderPlugin.provide(\n  createScaffolderFieldExtension({\n    component: OwnerPicker,\n    name: 'OwnerPicker',\n  }),\n);\n\n/**\n * The Router and main entrypoint to the Scaffolder plugin.\n *\n * @public\n */\nexport const ScaffolderPage = scaffolderPlugin.provide(\n  createRoutableExtension({\n    name: 'ScaffolderPage',\n    component: () => import('./components/Router').then(m => m.Router),\n    mountPoint: rootRouteRef,\n  }),\n);\n\n/**\n * A field extension to show all the Entities that are owned by the current logged-in User for use in templates.\n *\n * @public\n */\nexport const OwnedEntityPickerFieldExtension = scaffolderPlugin.provide(\n  createScaffolderFieldExtension({\n    component: OwnedEntityPicker,\n    name: 'OwnedEntityPicker',\n  }),\n);\n\n/**\n * EntityTagsPickerFieldExtension\n * @public\n */\nexport const EntityTagsPickerFieldExtension = scaffolderPlugin.provide(\n  createScaffolderFieldExtension({\n    component: EntityTagsPicker,\n    name: 'EntityTagsPicker',\n  }),\n);\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport capitalize from 'lodash/capitalize';\nimport { Progress } from '@backstage/core-components';\nimport {\n  Box,\n  Checkbox,\n  FormControlLabel,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Autocomplete } from '@material-ui/lab';\nimport { useEntityTypeFilter } from '@backstage/plugin-catalog-react';\nimport { alertApiRef, useApi } from '@backstage/core-plugin-api';\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\n/**\n * The component to select the `type` of `Template` that you will see in the table.\n *\n * @public\n */\nexport const TemplateTypePicker = () => {\n  const alertApi = useApi(alertApiRef);\n  const { error, loading, availableTypes, selectedTypes, setSelectedTypes } =\n    useEntityTypeFilter();\n\n  if (loading) return <Progress />;\n\n  if (!availableTypes) return null;\n\n  if (error) {\n    alertApi.post({\n      message: `Failed to load entity types`,\n      severity: 'error',\n    });\n    return null;\n  }\n\n  return (\n    <Box pb={1} pt={1}>\n      <Typography variant=\"button\">Categories</Typography>\n      <Autocomplete\n        multiple\n        aria-label=\"Categories\"\n        options={availableTypes}\n        value={selectedTypes}\n        onChange={(_: object, value: string[]) => setSelectedTypes(value)}\n        renderOption={(option, { selected }) => (\n          <FormControlLabel\n            control={\n              <Checkbox\n                icon={icon}\n                checkedIcon={checkedIcon}\n                checked={selected}\n              />\n            }\n            label={capitalize(option)}\n          />\n        )}\n        size=\"small\"\n        popupIcon={<ExpandMoreIcon data-testid=\"categories-picker-expand\" />}\n        renderInput={params => <TextField {...params} variant=\"outlined\" />}\n      />\n    </Box>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { useImmerReducer } from 'use-immer';\nimport { useEffect } from 'react';\nimport { scaffolderApiRef } from '../../api';\nimport {\n  ScaffolderTask,\n  ScaffolderTaskStatus,\n  ScaffolderTaskOutput,\n  LogEvent,\n} from '../../types';\nimport { useApi } from '@backstage/core-plugin-api';\nimport { Subscription } from '@backstage/types';\n\ntype Step = {\n  id: string;\n  status: ScaffolderTaskStatus;\n  endedAt?: string;\n  startedAt?: string;\n};\n\nexport type TaskStream = {\n  loading: boolean;\n  error?: Error;\n  stepLogs: { [stepId in string]: string[] };\n  completed: boolean;\n  task?: ScaffolderTask;\n  steps: { [stepId in string]: Step };\n  output?: ScaffolderTaskOutput;\n};\n\ntype ReducerLogEntry = {\n  createdAt: string;\n  body: {\n    stepId?: string;\n    status?: ScaffolderTaskStatus;\n    message: string;\n    output?: ScaffolderTaskOutput;\n  };\n};\n\ntype ReducerAction =\n  | { type: 'INIT'; data: ScaffolderTask }\n  | { type: 'LOGS'; data: ReducerLogEntry[] }\n  | { type: 'COMPLETED'; data: ReducerLogEntry }\n  | { type: 'ERROR'; data: Error };\n\nfunction reducer(draft: TaskStream, action: ReducerAction) {\n  switch (action.type) {\n    case 'INIT': {\n      draft.steps = action.data.spec.steps.reduce((current, next) => {\n        current[next.id] = { status: 'open', id: next.id };\n        return current;\n      }, {} as { [stepId in string]: Step });\n      draft.stepLogs = action.data.spec.steps.reduce((current, next) => {\n        current[next.id] = [];\n        return current;\n      }, {} as { [stepId in string]: string[] });\n      draft.loading = false;\n      draft.error = undefined;\n      draft.completed = false;\n      draft.task = action.data;\n      return;\n    }\n\n    case 'LOGS': {\n      const entries = action.data;\n      const logLines = [];\n\n      for (const entry of entries) {\n        const logLine = `${entry.createdAt} ${entry.body.message}`;\n        logLines.push(logLine);\n\n        if (!entry.body.stepId || !draft.steps?.[entry.body.stepId]) {\n          continue;\n        }\n\n        const currentStepLog = draft.stepLogs?.[entry.body.stepId];\n        const currentStep = draft.steps?.[entry.body.stepId];\n\n        if (entry.body.status && entry.body.status !== currentStep.status) {\n          currentStep.status = entry.body.status;\n\n          if (currentStep.status === 'processing') {\n            currentStep.startedAt = entry.createdAt;\n          }\n\n          if (\n            ['cancelled', 'failed', 'completed'].includes(currentStep.status)\n          ) {\n            currentStep.endedAt = entry.createdAt;\n          }\n        }\n\n        currentStepLog?.push(logLine);\n      }\n\n      return;\n    }\n\n    case 'COMPLETED': {\n      draft.completed = true;\n      draft.output = action.data.body.output;\n      return;\n    }\n\n    case 'ERROR': {\n      draft.error = action.data;\n      draft.loading = false;\n      draft.completed = true;\n      return;\n    }\n\n    default:\n      return;\n  }\n}\n\nexport const useTaskEventStream = (taskId: string): TaskStream => {\n  const scaffolderApi = useApi(scaffolderApiRef);\n  const [state, dispatch] = useImmerReducer(reducer, {\n    loading: true,\n    completed: false,\n    stepLogs: {} as { [stepId in string]: string[] },\n    steps: {} as { [stepId in string]: Step },\n  });\n\n  useEffect(() => {\n    let didCancel = false;\n    let subscription: Subscription | undefined;\n    let logPusher: NodeJS.Timeout | undefined;\n\n    scaffolderApi.getTask(taskId).then(\n      task => {\n        if (didCancel) {\n          return;\n        }\n        dispatch({ type: 'INIT', data: task });\n\n        // TODO(blam): Use a normal fetch to fetch the current log for the event stream\n        // and use that for an INIT_EVENTs dispatch event, and then\n        // use the last event ID to subscribe using after option to\n        // stream logs. Without this, if you have a lot of logs, it can look like the\n        // task is being rebuilt on load as it progresses through the steps at a slower\n        // rate whilst it builds the status from the event logs\n        const observable = scaffolderApi.streamLogs({ taskId });\n\n        const collectedLogEvents = new Array<LogEvent>();\n\n        function emitLogs() {\n          if (collectedLogEvents.length) {\n            const logs = collectedLogEvents.splice(\n              0,\n              collectedLogEvents.length,\n            );\n            dispatch({ type: 'LOGS', data: logs });\n          }\n        }\n\n        logPusher = setInterval(emitLogs, 500);\n\n        subscription = observable.subscribe({\n          next: event => {\n            switch (event.type) {\n              case 'log':\n                return collectedLogEvents.push(event);\n              case 'completion':\n                emitLogs();\n                dispatch({ type: 'COMPLETED', data: event });\n                return undefined;\n              default:\n                throw new Error(\n                  `Unhandled event type ${event.type} in observer`,\n                );\n            }\n          },\n          error: error => {\n            emitLogs();\n            dispatch({ type: 'ERROR', data: error });\n          },\n        });\n      },\n      error => {\n        if (!didCancel) {\n          dispatch({ type: 'ERROR', data: error });\n        }\n      },\n    );\n\n    return () => {\n      didCancel = true;\n      if (subscription) {\n        subscription.unsubscribe();\n      }\n      if (logPusher) {\n        clearInterval(logPusher);\n      }\n    };\n  }, [scaffolderApi, dispatch, taskId]);\n\n  return state;\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { Grid, LinkProps, makeStyles, Typography } from '@material-ui/core';\nimport LanguageIcon from '@material-ui/icons/Language';\n\nimport { IconComponent } from '@backstage/core-plugin-api';\nimport { Link } from '@backstage/core-components';\n\nconst useStyles = makeStyles({\n  svgIcon: {\n    display: 'inline-block',\n    '& svg': {\n      display: 'inline-block',\n      fontSize: 'inherit',\n      verticalAlign: 'baseline',\n    },\n  },\n});\n\nexport const IconLink = (\n  props: {\n    href: string;\n    text?: string;\n    Icon?: IconComponent;\n  } & LinkProps,\n) => {\n  const { href, text, Icon, ...linkProps } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Grid container direction=\"row\" spacing={1}>\n      <Grid item>\n        <Typography component=\"div\" className={classes.svgIcon}>\n          {Icon ? <Icon /> : <LanguageIcon />}\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Link to={href} {...linkProps}>\n          {text || href}\n        </Link>\n      </Grid>\n    </Grid>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { parseEntityRef } from '@backstage/catalog-model';\nimport { entityRouteRef } from '@backstage/plugin-catalog-react';\nimport { Box } from '@material-ui/core';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport React from 'react';\nimport { ScaffolderTaskOutput } from '../../types';\nimport { IconLink } from './IconLink';\nimport { IconComponent, useApp, useRouteRef } from '@backstage/core-plugin-api';\n\ntype TaskPageLinksProps = {\n  output: ScaffolderTaskOutput;\n};\n\nexport const TaskPageLinks = ({ output }: TaskPageLinksProps) => {\n  const { links = [] } = output;\n  const app = useApp();\n  const entityRoute = useRouteRef(entityRouteRef);\n\n  const iconResolver = (key?: string): IconComponent =>\n    key ? app.getSystemIcon(key) ?? LanguageIcon : LanguageIcon;\n\n  return (\n    <Box px={3} pb={3}>\n      {links\n        .filter(({ url, entityRef }) => url || entityRef)\n        .map(({ url, entityRef, title, icon }) => {\n          if (entityRef) {\n            const entityName = parseEntityRef(entityRef);\n            const target = entityRoute(entityName);\n            return { title, icon, url: target };\n          }\n          return { title, icon, url: url! };\n        })\n        .map(({ url, title, icon }, i) => (\n          <IconLink\n            key={`output-link-${i}`}\n            href={url}\n            text={title ?? url}\n            Icon={iconResolver(icon)}\n            target=\"_blank\"\n          />\n        ))}\n    </Box>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { parseEntityRef } from '@backstage/catalog-model';\nimport {\n  Content,\n  ErrorPage,\n  Header,\n  Lifecycle,\n  Page,\n  LogViewer,\n  Progress,\n} from '@backstage/core-components';\nimport { useRouteRef } from '@backstage/core-plugin-api';\nimport { BackstageTheme } from '@backstage/theme';\nimport {\n  Button,\n  CircularProgress,\n  Paper,\n  StepButton,\n  StepIconProps,\n} from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Stepper from '@material-ui/core/Stepper';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Cancel from '@material-ui/icons/Cancel';\nimport Check from '@material-ui/icons/Check';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport classNames from 'classnames';\nimport { DateTime, Interval } from 'luxon';\nimport qs from 'qs';\nimport React, { memo, useEffect, useMemo, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router';\nimport useInterval from 'react-use/lib/useInterval';\nimport { rootRouteRef, selectedTemplateRouteRef } from '../../routes';\nimport { ScaffolderTaskStatus, ScaffolderTaskOutput } from '../../types';\nimport { useTaskEventStream } from '../hooks/useEventStream';\nimport { TaskPageLinks } from './TaskPageLinks';\n\n// typings are wrong for this library, so fallback to not parsing types.\nconst humanizeDuration = require('humanize-duration');\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n    },\n    button: {\n      marginBottom: theme.spacing(2),\n      marginLeft: theme.spacing(2),\n    },\n    actionsContainer: {\n      marginBottom: theme.spacing(2),\n    },\n    resetContainer: {\n      padding: theme.spacing(3),\n    },\n    labelWrapper: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n    },\n    stepWrapper: {\n      width: '100%',\n    },\n  }),\n);\n\ntype TaskStep = {\n  id: string;\n  name: string;\n  status: ScaffolderTaskStatus;\n  startedAt?: string;\n  endedAt?: string;\n};\n\nconst StepTimeTicker = ({ step }: { step: TaskStep }) => {\n  const [time, setTime] = useState('');\n\n  useInterval(() => {\n    if (!step.startedAt) {\n      setTime('');\n      return;\n    }\n\n    const end = step.endedAt\n      ? DateTime.fromISO(step.endedAt)\n      : DateTime.local();\n\n    const startedAt = DateTime.fromISO(step.startedAt);\n    const formatted = Interval.fromDateTimes(startedAt, end)\n      .toDuration()\n      .valueOf();\n\n    setTime(humanizeDuration(formatted, { round: true }));\n  }, 1000);\n\n  return <Typography variant=\"caption\">{time}</Typography>;\n};\n\nconst useStepIconStyles = makeStyles((theme: BackstageTheme) =>\n  createStyles({\n    root: {\n      color: theme.palette.text.disabled,\n      display: 'flex',\n      height: 22,\n      alignItems: 'center',\n    },\n    completed: {\n      color: theme.palette.status.ok,\n    },\n    error: {\n      color: theme.palette.status.error,\n    },\n  }),\n);\n\nfunction TaskStepIconComponent(props: StepIconProps) {\n  const classes = useStepIconStyles();\n  const { active, completed, error } = props;\n\n  const getMiddle = () => {\n    if (active) {\n      return <CircularProgress size=\"24px\" />;\n    }\n    if (completed) {\n      return <Check />;\n    }\n    if (error) {\n      return <Cancel />;\n    }\n    return <FiberManualRecordIcon />;\n  };\n\n  return (\n    <div\n      className={classNames(classes.root, {\n        [classes.completed]: completed,\n        [classes.error]: error,\n      })}\n    >\n      {getMiddle()}\n    </div>\n  );\n}\n\nexport const TaskStatusStepper = memo(\n  ({\n    steps,\n    currentStepId,\n    onUserStepChange,\n  }: {\n    steps: TaskStep[];\n    currentStepId: string | undefined;\n    onUserStepChange: (id: string) => void;\n  }) => {\n    const classes = useStyles();\n\n    return (\n      <div className={classes.root}>\n        <Stepper\n          activeStep={steps.findIndex(s => s.id === currentStepId)}\n          orientation=\"vertical\"\n          nonLinear\n        >\n          {steps.map((step, index) => {\n            const isCompleted = step.status === 'completed';\n            const isFailed = step.status === 'failed';\n            const isActive = step.status === 'processing';\n            const isSkipped = step.status === 'skipped';\n\n            return (\n              <Step key={String(index)} expanded>\n                <StepButton onClick={() => onUserStepChange(step.id)}>\n                  <StepLabel\n                    StepIconProps={{\n                      completed: isCompleted,\n                      error: isFailed,\n                      active: isActive,\n                    }}\n                    StepIconComponent={TaskStepIconComponent}\n                    className={classes.stepWrapper}\n                  >\n                    <div className={classes.labelWrapper}>\n                      <Typography variant=\"subtitle2\">{step.name}</Typography>\n                      {isSkipped ? (\n                        <Typography variant=\"caption\">Skipped</Typography>\n                      ) : (\n                        <StepTimeTicker step={step} />\n                      )}\n                    </div>\n                  </StepLabel>\n                </StepButton>\n              </Step>\n            );\n          })}\n        </Stepper>\n      </div>\n    );\n  },\n);\n\nconst hasLinks = ({ links = [] }: ScaffolderTaskOutput): boolean =>\n  links.length > 0;\n\n/**\n * TaskPageProps for constructing a TaskPage\n * @param loadingText - Optional loading text shown before a task begins executing.\n *\n * @public\n */\nexport type TaskPageProps = {\n  loadingText?: string;\n};\n\n/**\n * TaskPage for showing the status of the taskId provided as a param\n * @param loadingText - Optional loading text shown before a task begins executing.\n *\n * @public\n */\nexport const TaskPage = ({ loadingText }: TaskPageProps) => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const rootPath = useRouteRef(rootRouteRef);\n  const templateRoute = useRouteRef(selectedTemplateRouteRef);\n  const [userSelectedStepId, setUserSelectedStepId] = useState<\n    string | undefined\n  >(undefined);\n  const [lastActiveStepId, setLastActiveStepId] = useState<string | undefined>(\n    undefined,\n  );\n  const { taskId } = useParams();\n  const taskStream = useTaskEventStream(taskId);\n  const completed = taskStream.completed;\n  const steps = useMemo(\n    () =>\n      taskStream.task?.spec.steps.map(step => ({\n        ...step,\n        ...taskStream?.steps?.[step.id],\n      })) ?? [],\n    [taskStream],\n  );\n\n  useEffect(() => {\n    const mostRecentFailedOrActiveStep = steps.find(step =>\n      ['failed', 'processing'].includes(step.status),\n    );\n    if (completed && !mostRecentFailedOrActiveStep) {\n      setLastActiveStepId(steps[steps.length - 1]?.id);\n      return;\n    }\n\n    setLastActiveStepId(mostRecentFailedOrActiveStep?.id);\n  }, [steps, completed]);\n\n  const currentStepId = userSelectedStepId ?? lastActiveStepId;\n\n  const logAsString = useMemo(() => {\n    if (!currentStepId) {\n      return loadingText ? loadingText : 'Loading...';\n    }\n    const log = taskStream.stepLogs[currentStepId];\n\n    if (!log?.length) {\n      return 'Waiting for logs...';\n    }\n    return log.join('\\n');\n  }, [taskStream.stepLogs, currentStepId, loadingText]);\n\n  const taskNotFound =\n    taskStream.completed === true &&\n    taskStream.loading === false &&\n    !taskStream.task;\n\n  const { output } = taskStream;\n\n  const handleStartOver = () => {\n    if (!taskStream.task || !taskStream.task?.spec.templateInfo?.entityRef) {\n      navigate(rootPath());\n      return;\n    }\n\n    const formData = taskStream.task!.spec.parameters;\n\n    const { name } = parseEntityRef(\n      taskStream.task!.spec.templateInfo?.entityRef,\n    );\n\n    navigate(\n      `${templateRoute({ templateName: name })}?${qs.stringify({\n        formData: JSON.stringify(formData),\n      })}`,\n    );\n  };\n\n  return (\n    <Page themeId=\"home\">\n      <Header\n        pageTitleOverride={`Task ${taskId}`}\n        title={\n          <>\n            Task Activity <Lifecycle alpha shorthand />\n          </>\n        }\n        subtitle={`Activity for task: ${taskId}`}\n      />\n      <Content>\n        {taskNotFound ? (\n          <ErrorPage\n            status=\"404\"\n            statusMessage=\"Task not found\"\n            additionalInfo=\"No task found with this ID\"\n          />\n        ) : (\n          <div>\n            <Grid container>\n              <Grid item xs={3}>\n                <Paper>\n                  <TaskStatusStepper\n                    steps={steps}\n                    currentStepId={currentStepId}\n                    onUserStepChange={setUserSelectedStepId}\n                  />\n                  {output && hasLinks(output) && (\n                    <TaskPageLinks output={output} />\n                  )}\n                  <Button\n                    className={classes.button}\n                    onClick={handleStartOver}\n                    disabled={!completed}\n                    variant=\"contained\"\n                    color=\"primary\"\n                  >\n                    Start Over\n                  </Button>\n                </Paper>\n              </Grid>\n              <Grid item xs={9}>\n                {!currentStepId && <Progress />}\n\n                <div style={{ height: '80vh' }}>\n                  <LogViewer text={logAsString} />\n                </div>\n              </Grid>\n            </Grid>\n          </div>\n        )}\n      </Content>\n    </Page>\n  );\n};\n"],"names":["FormControl","Autocomplete","useStyles","makeStyles","Typography","Grid"],"mappings":"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"}