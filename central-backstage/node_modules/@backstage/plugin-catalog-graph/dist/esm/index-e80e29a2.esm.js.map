{"version":3,"file":"index-e80e29a2.esm.js","sources":["../../src/components/CatalogGraphCard/CatalogGraphCard.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  getCompoundEntityRef,\n  parseEntityRef,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport { InfoCard, InfoCardVariants } from '@backstage/core-components';\nimport { useAnalytics, useRouteRef } from '@backstage/core-plugin-api';\nimport {\n  humanizeEntityRef,\n  useEntity,\n  entityRouteRef,\n} from '@backstage/plugin-catalog-react';\nimport { makeStyles, Theme } from '@material-ui/core';\nimport qs from 'qs';\nimport React, { MouseEvent, useCallback } from 'react';\nimport { useNavigate } from 'react-router';\nimport { catalogGraphRouteRef } from '../../routes';\nimport {\n  ALL_RELATION_PAIRS,\n  Direction,\n  EntityNode,\n  EntityRelationsGraph,\n  RelationPairs,\n} from '../EntityRelationsGraph';\n\nconst useStyles = makeStyles<Theme, { height: number | undefined }>({\n  card: ({ height }) => ({\n    display: 'flex',\n    flexDirection: 'column',\n    maxHeight: height,\n    minHeight: height,\n  }),\n  graph: {\n    flex: 1,\n    minHeight: 0,\n  },\n});\n\nexport const CatalogGraphCard = ({\n  variant = 'gridItem',\n  relationPairs = ALL_RELATION_PAIRS,\n  maxDepth = 1,\n  unidirectional = true,\n  mergeRelations = true,\n  kinds,\n  relations,\n  direction = Direction.LEFT_RIGHT,\n  height,\n  title = 'Relations',\n  zoom = 'enable-on-click',\n}: {\n  variant?: InfoCardVariants;\n  relationPairs?: RelationPairs;\n  maxDepth?: number;\n  unidirectional?: boolean;\n  mergeRelations?: boolean;\n  kinds?: string[];\n  relations?: string[];\n  direction?: Direction;\n  height?: number;\n  title?: string;\n  zoom?: 'enabled' | 'disabled' | 'enable-on-click';\n}) => {\n  const { entity } = useEntity();\n  const entityName = getCompoundEntityRef(entity);\n  const catalogEntityRoute = useRouteRef(entityRouteRef);\n  const catalogGraphRoute = useRouteRef(catalogGraphRouteRef);\n  const navigate = useNavigate();\n  const classes = useStyles({ height });\n  const analytics = useAnalytics();\n\n  const onNodeClick = useCallback(\n    (node: EntityNode, _: MouseEvent<unknown>) => {\n      const nodeEntityName = parseEntityRef(node.id);\n      const path = catalogEntityRoute({\n        kind: nodeEntityName.kind.toLocaleLowerCase('en-US'),\n        namespace: nodeEntityName.namespace.toLocaleLowerCase('en-US'),\n        name: nodeEntityName.name,\n      });\n      analytics.captureEvent(\n        'click',\n        node.title ?? humanizeEntityRef(nodeEntityName),\n        { attributes: { to: path } },\n      );\n      navigate(path);\n    },\n    [catalogEntityRoute, navigate, analytics],\n  );\n\n  const catalogGraphParams = qs.stringify(\n    { rootEntityRefs: [stringifyEntityRef(entity)] },\n    { arrayFormat: 'brackets', addQueryPrefix: true },\n  );\n  const catalogGraphUrl = `${catalogGraphRoute()}${catalogGraphParams}`;\n\n  return (\n    <InfoCard\n      title={title}\n      cardClassName={classes.card}\n      variant={variant}\n      noPadding\n      deepLink={{\n        title: 'View graph',\n        link: catalogGraphUrl,\n      }}\n    >\n      <EntityRelationsGraph\n        rootEntityNames={entityName}\n        maxDepth={maxDepth}\n        unidirectional={unidirectional}\n        mergeRelations={mergeRelations}\n        kinds={kinds}\n        relations={relations}\n        direction={direction}\n        onNodeClick={onNodeClick}\n        className={classes.graph}\n        relationPairs={relationPairs}\n        zoom={zoom}\n      />\n    </InfoCard>\n  );\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAwCA,MAAM,YAAY,WAAkD;AAAA,EAClE,MAAM,CAAC,EAAE;AAAc,IACrB,SAAS;AAAA,IACT,eAAe;AAAA,IACf,WAAW;AAAA,IACX,WAAW;AAAA;AAAA,EAEb,OAAO;AAAA,IACL,MAAM;AAAA,IACN,WAAW;AAAA;AAAA;MAIF,mBAAmB,CAAC;AAAA,EAC/B,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,WAAW;AAAA,EACX,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB;AAAA,EACA;AAAA,EACA,YAAY,UAAU;AAAA,EACtB;AAAA,EACA,QAAQ;AAAA,EACR,OAAO;AAAA,MAaH;AACJ,QAAM,EAAE,WAAW;AACnB,QAAM,aAAa,qBAAqB;AACxC,QAAM,qBAAqB,YAAY;AACvC,QAAM,oBAAoB,YAAY;AACtC,QAAM,WAAW;AACjB,QAAM,UAAU,UAAU,EAAE;AAC5B,QAAM,YAAY;AAElB,QAAM,cAAc,YAClB,CAAC,MAAkB,MAA2B;AAvFlD;AAwFM,UAAM,iBAAiB,eAAe,KAAK;AAC3C,UAAM,OAAO,mBAAmB;AAAA,MAC9B,MAAM,eAAe,KAAK,kBAAkB;AAAA,MAC5C,WAAW,eAAe,UAAU,kBAAkB;AAAA,MACtD,MAAM,eAAe;AAAA;AAEvB,cAAU,aACR,SACA,WAAK,UAAL,YAAc,kBAAkB,iBAChC,EAAE,YAAY,EAAE,IAAI;AAEtB,aAAS;AAAA,KAEX,CAAC,oBAAoB,UAAU;AAGjC,QAAM,qBAAqB,GAAG,UAC5B,EAAE,gBAAgB,CAAC,mBAAmB,YACtC,EAAE,aAAa,YAAY,gBAAgB;AAE7C,QAAM,kBAAkB,GAAG,sBAAsB;AAEjD,6CACG,UAAD;AAAA,IACE;AAAA,IACA,eAAe,QAAQ;AAAA,IACvB;AAAA,IACA,WAAS;AAAA,IACT,UAAU;AAAA,MACR,OAAO;AAAA,MACP,MAAM;AAAA;AAAA,yCAGP,sBAAD;AAAA,IACE,iBAAiB;AAAA,IACjB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,WAAW,QAAQ;AAAA,IACnB;AAAA,IACA;AAAA;AAAA;;;;"}