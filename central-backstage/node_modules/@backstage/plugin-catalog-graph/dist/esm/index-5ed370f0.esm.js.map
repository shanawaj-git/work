{"version":3,"file":"index-5ed370f0.esm.js","sources":["../../src/components/CatalogGraphPage/DirectionFilter.tsx","../../src/components/CatalogGraphPage/MaxDepthFilter.tsx","../../src/components/CatalogGraphPage/SelectedKindsFilter.tsx","../../src/components/CatalogGraphPage/SelectedRelationsFilter.tsx","../../src/components/CatalogGraphPage/SwitchFilter.tsx","../../src/components/CatalogGraphPage/useCatalogGraphPage.ts","../../src/components/CatalogGraphPage/CatalogGraphPage.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Select } from '@backstage/core-components';\nimport { Box } from '@material-ui/core';\nimport React, { useCallback } from 'react';\nimport { Direction } from '../EntityRelationsGraph';\n\nconst DIRECTION_DISPLAY_NAMES = {\n  [Direction.LEFT_RIGHT]: 'Left to right',\n  [Direction.RIGHT_LEFT]: 'Right to left',\n  [Direction.TOP_BOTTOM]: 'Top to bottom',\n  [Direction.BOTTOM_TOP]: 'Bottom to top',\n};\n\nexport type Props = {\n  value: Direction;\n  onChange: (value: Direction) => void;\n};\n\nexport const DirectionFilter = ({ value, onChange }: Props) => {\n  const handleChange = useCallback(v => onChange(v as Direction), [onChange]);\n\n  return (\n    <Box pb={1} pt={1}>\n      <Select\n        label=\"Direction\"\n        selected={value}\n        items={Object.values(Direction).map(v => ({\n          label: DIRECTION_DISPLAY_NAMES[v],\n          value: v,\n        }))}\n        onChange={handleChange}\n      />\n    </Box>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  Box,\n  FormControl,\n  IconButton,\n  InputAdornment,\n  makeStyles,\n  OutlinedInput,\n  Typography,\n} from '@material-ui/core';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport React, { useCallback } from 'react';\n\nexport type Props = {\n  value: number;\n  onChange: (value: number) => void;\n};\n\nconst useStyles = makeStyles({\n  formControl: {\n    width: '100%',\n    maxWidth: 300,\n  },\n});\n\nexport const MaxDepthFilter = ({ value, onChange }: Props) => {\n  const classes = useStyles();\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const v = Number(event.target.value);\n      onChange(v <= 0 ? Number.POSITIVE_INFINITY : v);\n    },\n    [onChange],\n  );\n\n  const reset = useCallback(() => {\n    onChange(Number.POSITIVE_INFINITY);\n  }, [onChange]);\n\n  return (\n    <Box pb={1} pt={1}>\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <Typography variant=\"button\">Max Depth</Typography>\n        <OutlinedInput\n          type=\"number\"\n          placeholder=\"âˆž Infinite\"\n          value={isFinite(value) ? value : ''}\n          onChange={handleChange}\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton\n                aria-label=\"clear max depth\"\n                onClick={reset}\n                edge=\"end\"\n              >\n                <ClearIcon />\n              </IconButton>\n            </InputAdornment>\n          }\n          inputProps={{\n            'aria-label': 'maxp',\n          }}\n          labelWidth={0}\n        />\n      </FormControl>\n    </Box>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { alertApiRef, useApi } from '@backstage/core-plugin-api';\nimport { catalogApiRef } from '@backstage/plugin-catalog-react';\nimport {\n  Box,\n  Checkbox,\n  FormControlLabel,\n  makeStyles,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Autocomplete } from '@material-ui/lab';\nimport React, { useCallback, useEffect, useMemo } from 'react';\nimport useAsync from 'react-use/lib/useAsync';\n\nconst useStyles = makeStyles({\n  formControl: {\n    maxWidth: 300,\n  },\n});\n\nexport type Props = {\n  value: string[] | undefined;\n  onChange: (value: string[] | undefined) => void;\n};\n\nexport const SelectedKindsFilter = ({ value, onChange }: Props) => {\n  const classes = useStyles();\n  const alertApi = useApi(alertApiRef);\n  const catalogApi = useApi(catalogApiRef);\n\n  const { error, value: kinds } = useAsync(async () => {\n    return await catalogApi\n      .getEntityFacets({ facets: ['kind'] })\n      .then(response => response.facets.kind?.map(f => f.value).sort() || []);\n  });\n\n  useEffect(() => {\n    if (error) {\n      alertApi.post({\n        message: `Failed to load entity kinds`,\n        severity: 'error',\n      });\n    }\n  }, [error, alertApi]);\n\n  const normalizedKinds = useMemo(\n    () => (kinds ? kinds.map(k => k.toLocaleLowerCase('en-US')) : kinds),\n    [kinds],\n  );\n\n  const handleChange = useCallback(\n    (_: unknown, v: string[]) => {\n      onChange(\n        normalizedKinds && normalizedKinds.every(r => v.includes(r))\n          ? undefined\n          : v,\n      );\n    },\n    [normalizedKinds, onChange],\n  );\n\n  const handleEmpty = useCallback(() => {\n    onChange(value?.length ? value : undefined);\n  }, [value, onChange]);\n\n  if (!kinds?.length || !normalizedKinds?.length || error) {\n    return <></>;\n  }\n\n  return (\n    <Box pb={1} pt={1}>\n      <Typography variant=\"button\">Kinds</Typography>\n      <Autocomplete\n        className={classes.formControl}\n        multiple\n        limitTags={4}\n        disableCloseOnSelect\n        aria-label=\"Kinds\"\n        options={normalizedKinds}\n        value={value ?? normalizedKinds}\n        getOptionLabel={k => kinds[normalizedKinds.indexOf(k)] ?? k}\n        onChange={handleChange}\n        onBlur={handleEmpty}\n        renderOption={(option, { selected }) => (\n          <FormControlLabel\n            control={\n              <Checkbox\n                icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\n                checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\n                checked={selected}\n              />\n            }\n            label={kinds[normalizedKinds.indexOf(option)] ?? option}\n          />\n        )}\n        size=\"small\"\n        popupIcon={<ExpandMoreIcon data-testid=\"selected-kinds-expand\" />}\n        renderInput={params => <TextField {...params} variant=\"outlined\" />}\n      />\n    </Box>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  Box,\n  Checkbox,\n  FormControlLabel,\n  makeStyles,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Autocomplete } from '@material-ui/lab';\nimport React, { useCallback, useMemo } from 'react';\nimport { RelationPairs } from '../EntityRelationsGraph';\n\nconst useStyles = makeStyles({\n  formControl: {\n    maxWidth: 300,\n  },\n});\n\nexport type Props = {\n  relationPairs: RelationPairs;\n  value: string[] | undefined;\n  onChange: (value: string[] | undefined) => void;\n};\n\nexport const SelectedRelationsFilter = ({\n  relationPairs,\n  value,\n  onChange,\n}: Props) => {\n  const classes = useStyles();\n  const relations = useMemo(() => relationPairs.flat(), [relationPairs]);\n\n  const handleChange = useCallback(\n    (_: unknown, v: string[]) => {\n      onChange(relations.every(r => v.includes(r)) ? undefined : v);\n    },\n    [relations, onChange],\n  );\n\n  const handleEmpty = useCallback(() => {\n    onChange(value?.length ? value : undefined);\n  }, [value, onChange]);\n\n  return (\n    <Box pb={1} pt={1}>\n      <Typography variant=\"button\">Relations</Typography>\n      <Autocomplete\n        className={classes.formControl}\n        multiple\n        limitTags={4}\n        disableCloseOnSelect\n        aria-label=\"Relations\"\n        options={relations}\n        value={value ?? relations}\n        onChange={handleChange}\n        onBlur={handleEmpty}\n        renderOption={(option, { selected }) => (\n          <FormControlLabel\n            control={\n              <Checkbox\n                icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\n                checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\n                checked={selected}\n              />\n            }\n            label={option}\n          />\n        )}\n        size=\"small\"\n        popupIcon={<ExpandMoreIcon data-testid=\"selected-relations-expand\" />}\n        renderInput={params => <TextField {...params} variant=\"outlined\" />}\n      />\n    </Box>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Box, FormControlLabel, makeStyles, Switch } from '@material-ui/core';\nimport React, { useCallback } from 'react';\n\nexport type Props = {\n  label: string;\n  value: boolean;\n  onChange: (value: boolean) => void;\n};\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    maxWidth: 300,\n  },\n});\n\nexport const SwitchFilter = ({ label, value, onChange }: Props) => {\n  const classes = useStyles();\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      onChange(event.target.checked);\n    },\n    [onChange],\n  );\n\n  return (\n    <Box pb={1} pt={1}>\n      <FormControlLabel\n        control={\n          <Switch\n            checked={value}\n            onChange={handleChange}\n            name={label}\n            color=\"primary\"\n          />\n        }\n        label={label}\n        className={classes.root}\n      />\n    </Box>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  CompoundEntityRef,\n  parseEntityRef,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport qs from 'qs';\nimport {\n  Dispatch,\n  DispatchWithoutAction,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { useLocation } from 'react-router';\nimport usePrevious from 'react-use/lib/usePrevious';\nimport { Direction } from '../EntityRelationsGraph';\n\nexport type CatalogGraphPageValue = {\n  rootEntityNames: CompoundEntityRef[];\n  setRootEntityNames: Dispatch<React.SetStateAction<CompoundEntityRef[]>>;\n  maxDepth: number;\n  setMaxDepth: Dispatch<React.SetStateAction<number>>;\n  selectedRelations: string[] | undefined;\n  setSelectedRelations: Dispatch<React.SetStateAction<string[] | undefined>>;\n  selectedKinds: string[] | undefined;\n  setSelectedKinds: Dispatch<React.SetStateAction<string[] | undefined>>;\n  unidirectional: boolean;\n  setUnidirectional: Dispatch<React.SetStateAction<boolean>>;\n  mergeRelations: boolean;\n  setMergeRelations: Dispatch<React.SetStateAction<boolean>>;\n  direction: Direction;\n  setDirection: Dispatch<React.SetStateAction<Direction>>;\n  showFilters: boolean;\n  toggleShowFilters: DispatchWithoutAction;\n};\n\nexport function useCatalogGraphPage({\n  initialState = {},\n}: {\n  initialState?: {\n    selectedRelations?: string[] | undefined;\n    selectedKinds?: string[] | undefined;\n    rootEntityRefs?: string[];\n    maxDepth?: number;\n    unidirectional?: boolean;\n    mergeRelations?: boolean;\n    direction?: Direction;\n    showFilters?: boolean;\n  };\n}): CatalogGraphPageValue {\n  const location = useLocation();\n  const query = useMemo(\n    () =>\n      (qs.parse(location.search, { arrayLimit: 0, ignoreQueryPrefix: true }) ||\n        {}) as {\n        selectedRelations?: string[] | string;\n        selectedKinds?: string[] | string;\n        rootEntityRefs?: string[] | string;\n        maxDepth?: string[] | string;\n        unidirectional?: string[] | string;\n        mergeRelations?: string[] | string;\n        direction?: string[] | Direction;\n        showFilters?: string[] | string;\n      },\n    [location.search],\n  );\n\n  // Initial state\n  const [rootEntityNames, setRootEntityNames] = useState<CompoundEntityRef[]>(\n    () =>\n      (Array.isArray(query.rootEntityRefs)\n        ? query.rootEntityRefs\n        : initialState?.rootEntityRefs ?? []\n      ).map(r => parseEntityRef(r)),\n  );\n  const [maxDepth, setMaxDepth] = useState<number>(() =>\n    typeof query.maxDepth === 'string'\n      ? parseMaxDepth(query.maxDepth)\n      : initialState?.maxDepth ?? Number.POSITIVE_INFINITY,\n  );\n  const [selectedRelations, setSelectedRelations] = useState<\n    string[] | undefined\n  >(() =>\n    Array.isArray(query.selectedRelations)\n      ? query.selectedRelations\n      : initialState?.selectedRelations,\n  );\n  const [selectedKinds, setSelectedKinds] = useState<string[] | undefined>(() =>\n    (Array.isArray(query.selectedKinds)\n      ? query.selectedKinds\n      : initialState?.selectedKinds\n    )?.map(k => k.toLocaleLowerCase('en-US')),\n  );\n  const [unidirectional, setUnidirectional] = useState<boolean>(() =>\n    typeof query.unidirectional === 'string'\n      ? query.unidirectional === 'true'\n      : initialState?.unidirectional ?? true,\n  );\n  const [mergeRelations, setMergeRelations] = useState<boolean>(() =>\n    typeof query.mergeRelations === 'string'\n      ? query.mergeRelations === 'true'\n      : initialState?.mergeRelations ?? true,\n  );\n  const [direction, setDirection] = useState<Direction>(() =>\n    typeof query.direction === 'string'\n      ? query.direction\n      : initialState?.direction ?? Direction.LEFT_RIGHT,\n  );\n  const [showFilters, setShowFilters] = useState<boolean>(() =>\n    typeof query.showFilters === 'string'\n      ? query.showFilters === 'true'\n      : initialState?.showFilters ?? true,\n  );\n  const toggleShowFilters = useCallback(\n    () => setShowFilters(s => !s),\n    [setShowFilters],\n  );\n\n  // Update from query parameters\n  const prevQueryParams = usePrevious(location.search);\n  useEffect(() => {\n    // Only respond to changes to url query params\n    if (location.search === prevQueryParams) {\n      return;\n    }\n\n    if (Array.isArray(query.rootEntityRefs)) {\n      setRootEntityNames(query.rootEntityRefs.map(r => parseEntityRef(r)));\n    }\n\n    if (typeof query.maxDepth === 'string') {\n      setMaxDepth(parseMaxDepth(query.maxDepth));\n    }\n\n    if (Array.isArray(query.selectedKinds)) {\n      setSelectedKinds(query.selectedKinds);\n    }\n\n    if (Array.isArray(query.selectedRelations)) {\n      setSelectedRelations(query.selectedRelations);\n    }\n\n    if (typeof query.unidirectional === 'string') {\n      setUnidirectional(query.unidirectional === 'true');\n    }\n\n    if (typeof query.mergeRelations === 'string') {\n      setMergeRelations(query.mergeRelations === 'true');\n    }\n\n    if (typeof query.direction === 'string') {\n      setDirection(query.direction);\n    }\n\n    if (typeof query.showFilters === 'string') {\n      setShowFilters(query.showFilters === 'true');\n    }\n  }, [\n    prevQueryParams,\n    location.search,\n    query,\n    setRootEntityNames,\n    setMaxDepth,\n    setSelectedKinds,\n    setSelectedRelations,\n    setUnidirectional,\n    setMergeRelations,\n    setDirection,\n    setShowFilters,\n  ]);\n\n  // Update query parameters\n  const previousRootEntityRefs = usePrevious(\n    rootEntityNames.map(e => stringifyEntityRef(e)),\n  );\n\n  useEffect(() => {\n    const rootEntityRefs = rootEntityNames.map(e => stringifyEntityRef(e));\n    const newParams = qs.stringify(\n      {\n        rootEntityRefs,\n        maxDepth: isFinite(maxDepth) ? maxDepth : 'âˆž',\n        selectedKinds,\n        selectedRelations,\n        unidirectional,\n        mergeRelations,\n        direction,\n        showFilters,\n      },\n      { arrayFormat: 'brackets', addQueryPrefix: true },\n    );\n    const newUrl = `${window.location.pathname}${newParams}`;\n\n    // We directly manipulate window history here in order to not re-render\n    // infinitely (state => location => state => etc). The intention of this\n    // code is just to ensure the right query/filters are loaded when a user\n    // clicks the \"back\" button after clicking a result.\n    // Only push a new history entry if we switched to another entity, but not\n    // if we just changed a viewer setting.\n    if (\n      !previousRootEntityRefs ||\n      (rootEntityRefs.length === previousRootEntityRefs.length &&\n        rootEntityRefs.every((v, i) => v === previousRootEntityRefs[i]))\n    ) {\n      window.history.replaceState(null, document.title, newUrl);\n    } else {\n      window.history.pushState(null, document.title, newUrl);\n    }\n  }, [\n    rootEntityNames,\n    maxDepth,\n    selectedKinds,\n    selectedRelations,\n    unidirectional,\n    mergeRelations,\n    direction,\n    showFilters,\n    previousRootEntityRefs,\n  ]);\n\n  return {\n    rootEntityNames,\n    setRootEntityNames,\n    maxDepth,\n    setMaxDepth,\n    selectedRelations,\n    setSelectedRelations,\n    selectedKinds,\n    setSelectedKinds,\n    unidirectional,\n    setUnidirectional,\n    mergeRelations,\n    setMergeRelations,\n    direction,\n    setDirection,\n    showFilters,\n    toggleShowFilters,\n  };\n}\n\nfunction parseMaxDepth(value: string): number {\n  return value === 'âˆž' ? Number.POSITIVE_INFINITY : Number(value);\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { parseEntityRef } from '@backstage/catalog-model';\nimport {\n  Content,\n  ContentHeader,\n  Header,\n  Page,\n  SupportButton,\n} from '@backstage/core-components';\nimport { useAnalytics, useRouteRef } from '@backstage/core-plugin-api';\nimport {\n  entityRouteRef,\n  humanizeEntityRef,\n} from '@backstage/plugin-catalog-react';\nimport { Grid, makeStyles, Paper, Typography } from '@material-ui/core';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport ZoomOutMap from '@material-ui/icons/ZoomOutMap';\nimport { ToggleButton } from '@material-ui/lab';\nimport React, { MouseEvent, useCallback } from 'react';\nimport { useNavigate } from 'react-router';\nimport {\n  ALL_RELATION_PAIRS,\n  Direction,\n  EntityNode,\n  EntityRelationsGraph,\n  RelationPairs,\n} from '../EntityRelationsGraph';\nimport { DirectionFilter } from './DirectionFilter';\nimport { MaxDepthFilter } from './MaxDepthFilter';\nimport { SelectedKindsFilter } from './SelectedKindsFilter';\nimport { SelectedRelationsFilter } from './SelectedRelationsFilter';\nimport { SwitchFilter } from './SwitchFilter';\nimport { useCatalogGraphPage } from './useCatalogGraphPage';\n\nconst useStyles = makeStyles(theme => ({\n  content: {\n    minHeight: 0,\n  },\n  container: {\n    height: '100%',\n    maxHeight: '100%',\n    minHeight: 0,\n  },\n  fullHeight: {\n    maxHeight: '100%',\n    display: 'flex',\n    minHeight: 0,\n  },\n  graphWrapper: {\n    position: 'relative',\n    flex: 1,\n    minHeight: 0,\n    display: 'flex',\n  },\n  graph: {\n    flex: 1,\n    minHeight: 0,\n  },\n  legend: {\n    position: 'absolute',\n    bottom: 0,\n    right: 0,\n    padding: theme.spacing(1),\n    '& .icon': {\n      verticalAlign: 'bottom',\n    },\n  },\n  filters: {\n    display: 'grid',\n    gridGap: theme.spacing(1),\n    gridAutoRows: 'auto',\n    [theme.breakpoints.up('lg')]: {\n      display: 'block',\n    },\n    [theme.breakpoints.only('md')]: {\n      gridTemplateColumns: 'repeat(3, 1fr)',\n    },\n    [theme.breakpoints.only('sm')]: {\n      gridTemplateColumns: 'repeat(2, 1fr)',\n    },\n    [theme.breakpoints.down('xs')]: {\n      gridTemplateColumns: 'repeat(1, 1fr)',\n    },\n  },\n}));\n\nexport const CatalogGraphPage = ({\n  relationPairs = ALL_RELATION_PAIRS,\n  initialState,\n}: {\n  relationPairs?: RelationPairs;\n  initialState?: {\n    selectedRelations?: string[];\n    selectedKinds?: string[];\n    rootEntityRefs?: string[];\n    maxDepth?: number;\n    unidirectional?: boolean;\n    mergeRelations?: boolean;\n    direction?: Direction;\n    showFilters?: boolean;\n  };\n}) => {\n  const navigate = useNavigate();\n  const classes = useStyles();\n  const catalogEntityRoute = useRouteRef(entityRouteRef);\n  const {\n    maxDepth,\n    setMaxDepth,\n    selectedKinds,\n    setSelectedKinds,\n    selectedRelations,\n    setSelectedRelations,\n    unidirectional,\n    setUnidirectional,\n    mergeRelations,\n    setMergeRelations,\n    direction,\n    setDirection,\n    rootEntityNames,\n    setRootEntityNames,\n    showFilters,\n    toggleShowFilters,\n  } = useCatalogGraphPage({ initialState });\n  const analytics = useAnalytics();\n  const onNodeClick = useCallback(\n    (node: EntityNode, event: MouseEvent<unknown>) => {\n      const nodeEntityName = parseEntityRef(node.id);\n\n      if (event.shiftKey) {\n        const path = catalogEntityRoute({\n          kind: nodeEntityName.kind.toLocaleLowerCase('en-US'),\n          namespace: nodeEntityName.namespace.toLocaleLowerCase('en-US'),\n          name: nodeEntityName.name,\n        });\n\n        analytics.captureEvent(\n          'click',\n          node.title ?? humanizeEntityRef(nodeEntityName),\n          { attributes: { to: path } },\n        );\n        navigate(path);\n      } else {\n        analytics.captureEvent(\n          'click',\n          node.title ?? humanizeEntityRef(nodeEntityName),\n        );\n        setRootEntityNames([nodeEntityName]);\n      }\n    },\n    [catalogEntityRoute, navigate, setRootEntityNames, analytics],\n  );\n\n  return (\n    <Page themeId=\"home\">\n      <Header\n        title=\"Catalog Graph\"\n        subtitle={rootEntityNames.map(e => humanizeEntityRef(e)).join(', ')}\n      />\n      <Content stretch className={classes.content}>\n        <ContentHeader\n          titleComponent={\n            <ToggleButton\n              value=\"show filters\"\n              selected={showFilters}\n              onChange={() => toggleShowFilters()}\n            >\n              <FilterListIcon /> Filters\n            </ToggleButton>\n          }\n        >\n          <SupportButton>\n            Start tracking your component in by adding it to the software\n            catalog.\n          </SupportButton>\n        </ContentHeader>\n        <Grid container alignItems=\"stretch\" className={classes.container}>\n          {showFilters && (\n            <Grid item xs={12} lg={2} className={classes.filters}>\n              <MaxDepthFilter value={maxDepth} onChange={setMaxDepth} />\n              <SelectedKindsFilter\n                value={selectedKinds}\n                onChange={setSelectedKinds}\n              />\n              <SelectedRelationsFilter\n                value={selectedRelations}\n                onChange={setSelectedRelations}\n                relationPairs={relationPairs}\n              />\n              <DirectionFilter value={direction} onChange={setDirection} />\n              <SwitchFilter\n                value={unidirectional}\n                onChange={setUnidirectional}\n                label=\"Simplified\"\n              />\n              <SwitchFilter\n                value={mergeRelations}\n                onChange={setMergeRelations}\n                label=\"Merge Relations\"\n              />\n            </Grid>\n          )}\n          <Grid item xs className={classes.fullHeight}>\n            <Paper className={classes.graphWrapper}>\n              <Typography\n                variant=\"caption\"\n                color=\"textSecondary\"\n                display=\"block\"\n                className={classes.legend}\n              >\n                <ZoomOutMap className=\"icon\" /> Use pinch &amp; zoom to move\n                around the diagram. Click to change active node, shift click to\n                navigate to entity.\n              </Typography>\n              <EntityRelationsGraph\n                rootEntityNames={rootEntityNames}\n                maxDepth={maxDepth}\n                kinds={\n                  selectedKinds && selectedKinds.length > 0\n                    ? selectedKinds\n                    : undefined\n                }\n                relations={\n                  selectedRelations && selectedRelations.length > 0\n                    ? selectedRelations\n                    : undefined\n                }\n                mergeRelations={mergeRelations}\n                unidirectional={unidirectional}\n                onNodeClick={onNodeClick}\n                direction={direction}\n                relationPairs={relationPairs}\n                className={classes.graph}\n                zoom=\"enabled\"\n              />\n            </Paper>\n          </Grid>\n        </Grid>\n      </Content>\n    </Page>\n  );\n};\n"],"names":["useStyles"],"mappings":"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"}