{"version":3,"file":"index.esm.js","sources":["../src/components/EntityRelationsGraph/CustomLabel.tsx","../src/components/EntityRelationsGraph/EntityKindIcon.tsx","../src/components/EntityRelationsGraph/CustomNode.tsx","../src/components/EntityRelationsGraph/relations.ts","../src/components/EntityRelationsGraph/types.ts","../src/components/EntityRelationsGraph/useEntityStore.ts","../src/components/EntityRelationsGraph/useEntityRelationGraph.ts","../src/components/EntityRelationsGraph/useEntityRelationNodesAndEdges.ts","../src/components/EntityRelationsGraph/EntityRelationsGraph.tsx","../src/routes.ts","../src/plugin.ts","../src/extensions.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DependencyGraphTypes } from '@backstage/core-components';\nimport { BackstageTheme } from '@backstage/theme';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport React from 'react';\nimport { EntityEdgeData } from './types';\nimport classNames from 'classnames';\n\nconst useStyles = makeStyles((theme: BackstageTheme) => ({\n  text: {\n    fill: theme.palette.textContrast,\n  },\n  secondary: {\n    fill: theme.palette.textSubtle,\n  },\n}));\n\nexport function CustomLabel({\n  edge: { relations },\n}: DependencyGraphTypes.RenderLabelProps<EntityEdgeData>) {\n  const classes = useStyles();\n  return (\n    <text className={classes.text} textAnchor=\"middle\">\n      {relations.map((r, i) => (\n        <tspan key={r} className={classNames(i > 0 && classes.secondary)}>\n          {i > 0 && <tspan> / </tspan>}\n          {r}\n        </tspan>\n      ))}\n    </text>\n  );\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { useApp } from '@backstage/core-plugin-api';\nimport WorkIcon from '@material-ui/icons/Work';\nimport React from 'react';\n\nexport function EntityKindIcon({\n  kind,\n  ...props\n}: {\n  kind: string;\n  x?: number;\n  y?: number;\n  width?: number;\n  height?: number;\n  className?: string;\n}) {\n  const app = useApp();\n  const Icon =\n    app.getSystemIcon(`kind:${kind.toLocaleLowerCase('en-US')}`) ?? WorkIcon;\n  return <Icon {...props} />;\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DependencyGraphTypes } from '@backstage/core-components';\nimport { humanizeEntityRef } from '@backstage/plugin-catalog-react';\nimport { BackstageTheme } from '@backstage/theme';\nimport { makeStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\nimport React, { useLayoutEffect, useRef, useState } from 'react';\nimport { EntityKindIcon } from './EntityKindIcon';\nimport { EntityNodeData } from './types';\n\nconst useStyles = makeStyles((theme: BackstageTheme) => ({\n  node: {\n    fill: theme.palette.grey[300],\n    stroke: theme.palette.grey[300],\n\n    '&.primary': {\n      fill: theme.palette.primary.light,\n      stroke: theme.palette.primary.light,\n    },\n    '&.secondary': {\n      fill: theme.palette.secondary.light,\n      stroke: theme.palette.secondary.light,\n    },\n  },\n  text: {\n    fill: theme.palette.getContrastText(theme.palette.grey[300]),\n\n    '&.primary': {\n      fill: theme.palette.primary.contrastText,\n    },\n    '&.secondary': {\n      fill: theme.palette.secondary.contrastText,\n    },\n    '&.focused': {\n      fontWeight: 'bold',\n    },\n  },\n  clickable: {\n    cursor: 'pointer',\n  },\n}));\n\nexport function CustomNode({\n  node: {\n    id,\n    kind,\n    namespace,\n    name,\n    color = 'default',\n    focused,\n    title,\n    onClick,\n  },\n}: DependencyGraphTypes.RenderNodeProps<EntityNodeData>) {\n  const classes = useStyles();\n  const [width, setWidth] = useState(0);\n  const [height, setHeight] = useState(0);\n  const idRef = useRef<SVGTextElement | null>(null);\n\n  useLayoutEffect(() => {\n    // set the width to the length of the ID\n    if (idRef.current) {\n      let { height: renderedHeight, width: renderedWidth } =\n        idRef.current.getBBox();\n      renderedHeight = Math.round(renderedHeight);\n      renderedWidth = Math.round(renderedWidth);\n\n      if (renderedHeight !== height || renderedWidth !== width) {\n        setWidth(renderedWidth);\n        setHeight(renderedHeight);\n      }\n    }\n  }, [width, height]);\n\n  const padding = 10;\n  const iconSize = height;\n  const paddedIconWidth = kind ? iconSize + padding : 0;\n  const paddedWidth = paddedIconWidth + width + padding * 2;\n  const paddedHeight = height + padding * 2;\n\n  const displayTitle =\n    title ??\n    (kind && name && namespace\n      ? humanizeEntityRef({ kind, name, namespace })\n      : id);\n\n  return (\n    <g onClick={onClick} className={classNames(onClick && classes.clickable)}>\n      <rect\n        className={classNames(\n          classes.node,\n          color === 'primary' && 'primary',\n          color === 'secondary' && 'secondary',\n        )}\n        width={paddedWidth}\n        height={paddedHeight}\n        rx={10}\n      />\n      {kind && (\n        <EntityKindIcon\n          kind={kind}\n          y={padding}\n          x={padding}\n          width={iconSize}\n          height={iconSize}\n          className={classNames(\n            classes.text,\n            focused && 'focused',\n            color === 'primary' && 'primary',\n            color === 'secondary' && 'secondary',\n          )}\n        />\n      )}\n      <text\n        ref={idRef}\n        className={classNames(\n          classes.text,\n          focused && 'focused',\n          color === 'primary' && 'primary',\n          color === 'secondary' && 'secondary',\n        )}\n        y={paddedHeight / 2}\n        x={paddedIconWidth + (width + padding * 2) / 2}\n        textAnchor=\"middle\"\n        alignmentBaseline=\"middle\"\n      >\n        {displayTitle}\n      </text>\n    </g>\n  );\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  RELATION_API_CONSUMED_BY,\n  RELATION_API_PROVIDED_BY,\n  RELATION_CHILD_OF,\n  RELATION_CONSUMES_API,\n  RELATION_DEPENDENCY_OF,\n  RELATION_DEPENDS_ON,\n  RELATION_HAS_MEMBER,\n  RELATION_HAS_PART,\n  RELATION_MEMBER_OF,\n  RELATION_OWNED_BY,\n  RELATION_OWNER_OF,\n  RELATION_PARENT_OF,\n  RELATION_PART_OF,\n  RELATION_PROVIDES_API,\n} from '@backstage/catalog-model';\n\n/**\n * A pair of two relations that describe the opposite of each other. The first\n * relation is considered as the primary relation.\n *\n * @public\n */\nexport type RelationPairs = [string, string][];\n\n// TODO: This file only contains the pairs for the build-in relations.\n//  How to implement this when custom relations are used? Right now you can pass\n//  the relations everywhere.\n//  Another option is to move this into @backstage/catalog-model\n\n/**\n * A list of pairs of entity relations, used to define which relations are\n * merged together and which the primary relation is.\n *\n * @public\n */\nexport const ALL_RELATION_PAIRS: RelationPairs = [\n  [RELATION_OWNER_OF, RELATION_OWNED_BY],\n  [RELATION_CONSUMES_API, RELATION_API_CONSUMED_BY],\n  [RELATION_API_PROVIDED_BY, RELATION_PROVIDES_API],\n  [RELATION_HAS_PART, RELATION_PART_OF],\n  [RELATION_PARENT_OF, RELATION_CHILD_OF],\n  [RELATION_HAS_MEMBER, RELATION_MEMBER_OF],\n  [RELATION_DEPENDS_ON, RELATION_DEPENDENCY_OF],\n];\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DependencyGraphTypes } from '@backstage/core-components';\nimport { MouseEventHandler } from 'react';\n\n/**\n * Additional Data for entities.\n *\n * @public\n */\nexport type EntityEdgeData = {\n  /**\n   * Up to two relations that are connecting an entity.\n   */\n  relations: string[];\n  /**\n   * Whether the entity is visible or not.\n   */\n  // Not used, but has to be non empty to draw a label at all!\n  label: 'visible';\n};\n\n/**\n * Edge between two entities.\n *\n * @public\n */\nexport type EntityEdge = DependencyGraphTypes.DependencyEdge<EntityEdgeData>;\n\n/**\n * Additional data for Entity Node\n *\n * @public\n */\nexport type EntityNodeData = {\n  /**\n   * Name of the entity.\n   */\n  name: string;\n  /**\n   * Optional kind of the entity.\n   */\n  kind?: string;\n  /**\n   * Optional title of the entity.\n   */\n  title?: string;\n  /**\n   * Namespace of the entity.\n   */\n  namespace: string;\n  /**\n   * Whether the entity is focused, optional, defaults to false. Focused\n   * entities are highlighted in the graph.\n   */\n  focused?: boolean;\n  /**\n   * Optional color of the entity, defaults to 'default'.\n   */\n  color?: 'primary' | 'secondary' | 'default';\n  /**\n   * Optional click handler.\n   */\n  onClick?: MouseEventHandler<unknown>;\n};\n\n/**\n * Node representing an entity.\n *\n * @public\n */\nexport type EntityNode = DependencyGraphTypes.DependencyNode<EntityNodeData>;\n\n/**\n * Render direction of the graph.\n *\n * @public\n */\nexport enum Direction {\n  /**\n   * Top to bottom.\n   */\n  TOP_BOTTOM = 'TB',\n  /**\n   * Bottom to top.\n   */\n  BOTTOM_TOP = 'BT',\n  /**\n   * Left to right.\n   */\n  LEFT_RIGHT = 'LR',\n  /**\n   * Right to left.\n   */\n  RIGHT_LEFT = 'RL',\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Entity } from '@backstage/catalog-model';\nimport { useApi } from '@backstage/core-plugin-api';\nimport { catalogApiRef } from '@backstage/plugin-catalog-react';\nimport limiterFactory from 'p-limit';\nimport { Dispatch, useCallback, useRef, useState } from 'react';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\n\n// TODO: This is a good use case for a graphql API, once it is available in the\n// future.\n\nconst limiter = limiterFactory(10);\n\n/**\n * Ensures that a set of requested entities is loaded.\n */\nexport function useEntityStore(): {\n  entities: { [ref: string]: Entity };\n  loading: boolean;\n  error?: Error;\n  requestEntities: Dispatch<string[]>;\n} {\n  const catalogClient = useApi(catalogApiRef);\n  const state = useRef({\n    requestedEntities: new Set<string>(),\n    outstandingEntities: new Map<string, Promise<Entity | undefined>>(),\n    cachedEntities: new Map<string, Entity>(),\n  });\n  const [entities, setEntities] = useState<{\n    [ref: string]: Entity;\n  }>({});\n\n  const updateEntities = useCallback(() => {\n    const { cachedEntities, requestedEntities } = state.current;\n    const filteredEntities: { [ref: string]: Entity } = {};\n    requestedEntities.forEach(entityRef => {\n      const entity = cachedEntities.get(entityRef);\n\n      if (entity) {\n        filteredEntities[entityRef] = entity;\n      }\n    });\n    setEntities(filteredEntities);\n  }, [state, setEntities]);\n\n  const [asyncState, fetch] = useAsyncFn(async () => {\n    const { requestedEntities, outstandingEntities, cachedEntities } =\n      state.current;\n\n    await Promise.all(\n      Array.from(requestedEntities).map(entityRef =>\n        limiter(async () => {\n          if (cachedEntities.has(entityRef)) {\n            return;\n          }\n\n          if (outstandingEntities.has(entityRef)) {\n            await outstandingEntities.get(entityRef);\n            return;\n          }\n\n          const promise = catalogClient.getEntityByRef(entityRef);\n\n          outstandingEntities.set(entityRef, promise);\n\n          try {\n            const entity = await promise;\n\n            if (entity) {\n              cachedEntities.set(entityRef, entity);\n              updateEntities();\n            }\n          } finally {\n            outstandingEntities.delete(entityRef);\n          }\n        }),\n      ),\n    );\n  }, [state, updateEntities]);\n  const { loading, error } = asyncState;\n\n  const requestEntities = useCallback(\n    (entityRefs: string[]) => {\n      const n = new Set(entityRefs);\n      const { requestedEntities } = state.current;\n\n      if (\n        n.size !== requestedEntities.size ||\n        Array.from(n).some(e => !requestedEntities.has(e))\n      ) {\n        state.current.requestedEntities = n;\n        fetch();\n        updateEntities();\n      }\n    },\n    [state, fetch, updateEntities],\n  );\n\n  return {\n    entities,\n    loading,\n    error,\n    requestEntities,\n  };\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Entity } from '@backstage/catalog-model';\nimport { useEffect } from 'react';\nimport { useEntityStore } from './useEntityStore';\n\n/**\n * Discover the graph of entities connected by relations, starting from a set of\n * root entities. Filters are used to select which relations to includes.\n * Returns all discovered entities once they are loaded.\n */\nexport function useEntityRelationGraph({\n  rootEntityRefs,\n  filter: { maxDepth = Number.POSITIVE_INFINITY, relations, kinds } = {},\n}: {\n  rootEntityRefs: string[];\n  filter?: {\n    maxDepth?: number;\n    relations?: string[];\n    kinds?: string[];\n  };\n}): {\n  entities?: { [ref: string]: Entity };\n  loading: boolean;\n  error?: Error;\n} {\n  const { entities, loading, error, requestEntities } = useEntityStore();\n\n  useEffect(() => {\n    const expectedEntities = new Set([...rootEntityRefs]);\n    const processedEntityRefs = new Set<string>();\n\n    let nextDepthRefQueue = [...rootEntityRefs];\n    let depth = 0;\n\n    while (\n      nextDepthRefQueue.length > 0 &&\n      (!isFinite(maxDepth) || depth < maxDepth)\n    ) {\n      const entityRefQueue = nextDepthRefQueue;\n      nextDepthRefQueue = [];\n\n      while (entityRefQueue.length > 0) {\n        const entityRef = entityRefQueue.shift()!;\n        const entity = entities[entityRef];\n\n        processedEntityRefs.add(entityRef);\n\n        if (entity && entity.relations) {\n          for (const rel of entity.relations) {\n            if (\n              (!relations || relations.includes(rel.type)) &&\n              (!kinds ||\n                kinds.some(kind =>\n                  rel.targetRef.startsWith(\n                    `${kind.toLocaleLowerCase('en-US')}:`,\n                  ),\n                ))\n            ) {\n              if (!processedEntityRefs.has(rel.targetRef)) {\n                nextDepthRefQueue.push(rel.targetRef);\n                expectedEntities.add(rel.targetRef);\n              }\n            }\n          }\n        }\n      }\n\n      ++depth;\n    }\n\n    requestEntities([...expectedEntities]);\n  }, [entities, rootEntityRefs, maxDepth, relations, kinds, requestEntities]);\n\n  return {\n    entities,\n    loading,\n    error,\n  };\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DEFAULT_NAMESPACE } from '@backstage/catalog-model';\nimport { MouseEvent, useState } from 'react';\nimport useDebounce from 'react-use/lib/useDebounce';\nimport { RelationPairs, ALL_RELATION_PAIRS } from './relations';\nimport { EntityEdge, EntityNode } from './types';\nimport { useEntityRelationGraph } from './useEntityRelationGraph';\n\n/**\n * Generate nodes and edges to render the entity graph.\n */\nexport function useEntityRelationNodesAndEdges({\n  rootEntityRefs,\n  maxDepth = Number.POSITIVE_INFINITY,\n  unidirectional = true,\n  mergeRelations = true,\n  kinds,\n  relations,\n  onNodeClick,\n  relationPairs = ALL_RELATION_PAIRS,\n}: {\n  rootEntityRefs: string[];\n  maxDepth?: number;\n  unidirectional?: boolean;\n  mergeRelations?: boolean;\n  kinds?: string[];\n  relations?: string[];\n  onNodeClick?: (value: EntityNode, event: MouseEvent<unknown>) => void;\n  relationPairs?: RelationPairs;\n}): {\n  loading: boolean;\n  nodes?: EntityNode[];\n  edges?: EntityEdge[];\n  error?: Error;\n} {\n  const [nodesAndEdges, setNodesAndEdges] = useState<{\n    nodes?: EntityNode[];\n    edges?: EntityEdge[];\n  }>({});\n  const { entities, loading, error } = useEntityRelationGraph({\n    rootEntityRefs,\n    filter: {\n      maxDepth,\n      kinds,\n      relations,\n    },\n  });\n\n  useDebounce(\n    () => {\n      if (!entities || Object.keys(entities).length === 0) {\n        setNodesAndEdges({});\n        return;\n      }\n\n      const nodes = Object.entries(entities).map(([entityRef, entity]) => {\n        const focused = rootEntityRefs.includes(entityRef);\n        const node: EntityNode = {\n          id: entityRef,\n          title: entity.metadata?.title ?? undefined,\n          kind: entity.kind,\n          name: entity.metadata.name,\n          namespace: entity.metadata.namespace ?? DEFAULT_NAMESPACE,\n          focused,\n          color: focused ? 'secondary' : 'primary',\n        };\n\n        if (onNodeClick) {\n          node.onClick = event => onNodeClick(node, event);\n        }\n\n        return node;\n      });\n\n      const edges: EntityEdge[] = [];\n      const visitedNodes = new Set<string>();\n      const nodeQueue = [...rootEntityRefs];\n\n      while (nodeQueue.length > 0) {\n        const entityRef = nodeQueue.pop()!;\n        const entity = entities[entityRef];\n        visitedNodes.add(entityRef);\n\n        if (entity) {\n          entity?.relations?.forEach(rel => {\n            // Check if the related entity should be displayed, if not, ignore\n            // the relation too\n            if (!entities[rel.targetRef]) {\n              return;\n            }\n\n            if (relations && !relations.includes(rel.type)) {\n              return;\n            }\n\n            if (\n              kinds &&\n              !kinds.some(kind =>\n                rel.targetRef.startsWith(`${kind.toLocaleLowerCase('en-US')}:`),\n              )\n            ) {\n              return;\n            }\n\n            if (!unidirectional || !visitedNodes.has(rel.targetRef)) {\n              if (mergeRelations) {\n                const pair = relationPairs.find(\n                  ([l, r]) => l === rel.type || r === rel.type,\n                ) ?? [rel.type];\n                const [left] = pair;\n\n                edges.push({\n                  from: left === rel.type ? entityRef : rel.targetRef,\n                  to: left === rel.type ? rel.targetRef : entityRef,\n                  relations: pair,\n                  label: 'visible',\n                });\n              } else {\n                edges.push({\n                  from: entityRef,\n                  to: rel.targetRef,\n                  relations: [rel.type],\n                  label: 'visible',\n                });\n              }\n            }\n\n            if (!visitedNodes.has(rel.targetRef)) {\n              nodeQueue.push(rel.targetRef);\n              visitedNodes.add(rel.targetRef);\n            }\n          });\n        }\n      }\n\n      setNodesAndEdges({ nodes, edges });\n    },\n    100,\n    [\n      entities,\n      rootEntityRefs,\n      kinds,\n      relations,\n      unidirectional,\n      mergeRelations,\n      onNodeClick,\n      relationPairs,\n    ],\n  );\n\n  return {\n    loading,\n    error,\n    ...nodesAndEdges,\n  };\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  CompoundEntityRef,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport {\n  DependencyGraph,\n  DependencyGraphTypes,\n} from '@backstage/core-components';\nimport { errorApiRef, useApi } from '@backstage/core-plugin-api';\nimport { CircularProgress, makeStyles, useTheme } from '@material-ui/core';\nimport classNames from 'classnames';\nimport React, { MouseEvent, useEffect, useMemo } from 'react';\nimport { CustomLabel } from './CustomLabel';\nimport { CustomNode } from './CustomNode';\nimport { ALL_RELATION_PAIRS, RelationPairs } from './relations';\nimport { Direction, EntityNode } from './types';\nimport { useEntityRelationNodesAndEdges } from './useEntityRelationNodesAndEdges';\n\nconst useStyles = makeStyles(theme => ({\n  progress: {\n    position: 'absolute',\n    left: '50%',\n    top: '50%',\n    marginLeft: '-20px',\n    marginTop: '-20px',\n  },\n  container: {\n    position: 'relative',\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  graph: {\n    width: '100%',\n    flex: 1,\n    // Right now there is no good way to style edges between nodes, we have to\n    // fallback to these hacks:\n    '& path[marker-end]': {\n      transition: 'filter 0.1s ease-in-out',\n    },\n    '& path[marker-end]:hover': {\n      filter: `drop-shadow(2px 2px 4px ${theme.palette.primary.dark});`,\n    },\n    '& g[data-testid=label]': {\n      transition: 'transform 0s',\n    },\n  },\n}));\n\n/**\n * Core building block for custom entity relations diagrams.\n *\n * @public\n */\nexport const EntityRelationsGraph = ({\n  rootEntityNames,\n  maxDepth = Number.POSITIVE_INFINITY,\n  unidirectional = true,\n  mergeRelations = true,\n  kinds,\n  relations,\n  direction = Direction.LEFT_RIGHT,\n  onNodeClick,\n  relationPairs = ALL_RELATION_PAIRS,\n  className,\n  zoom = 'enabled',\n}: {\n  rootEntityNames: CompoundEntityRef | CompoundEntityRef[];\n  maxDepth?: number;\n  unidirectional?: boolean;\n  mergeRelations?: boolean;\n  kinds?: string[];\n  relations?: string[];\n  direction?: Direction;\n  onNodeClick?: (value: EntityNode, event: MouseEvent<unknown>) => void;\n  relationPairs?: RelationPairs;\n  className?: string;\n  zoom?: 'enabled' | 'disabled' | 'enable-on-click';\n}) => {\n  const theme = useTheme();\n  const classes = useStyles();\n  const rootEntityRefs = useMemo(\n    () =>\n      (Array.isArray(rootEntityNames)\n        ? rootEntityNames\n        : [rootEntityNames]\n      ).map(e => stringifyEntityRef(e)),\n    [rootEntityNames],\n  );\n  const errorApi = useApi(errorApiRef);\n  const { loading, error, nodes, edges } = useEntityRelationNodesAndEdges({\n    rootEntityRefs,\n    maxDepth,\n    unidirectional,\n    mergeRelations,\n    kinds,\n    relations,\n    onNodeClick,\n    relationPairs,\n  });\n\n  useEffect(() => {\n    if (error) {\n      errorApi.post(error);\n    }\n  }, [errorApi, error]);\n\n  return (\n    <div className={classNames(classes.container, className)}>\n      {loading && <CircularProgress className={classes.progress} />}\n      {nodes && edges && (\n        <DependencyGraph\n          nodes={nodes}\n          edges={edges}\n          renderNode={CustomNode}\n          renderLabel={CustomLabel}\n          direction={direction}\n          className={classes.graph}\n          paddingX={theme.spacing(4)}\n          paddingY={theme.spacing(4)}\n          labelPosition={DependencyGraphTypes.LabelPosition.RIGHT}\n          labelOffset={theme.spacing(1)}\n          zoom={zoom}\n        />\n      )}\n    </div>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  createExternalRouteRef,\n  createRouteRef,\n} from '@backstage/core-plugin-api';\n\n/**\n * Route pointing to the standalone catalog graph page.\n *\n * @public\n */\nexport const catalogGraphRouteRef = createRouteRef({\n  id: 'catalog-graph',\n});\n\n/**\n * Route pointing to the entity page.\n * Used to navigate from the graph to an entity.\n *\n * @public\n * @deprecated This route is no longer used and can be removed\n */\nexport const catalogEntityRouteRef = createExternalRouteRef({\n  id: 'catalog-entity',\n  params: ['namespace', 'kind', 'name'],\n  optional: true,\n});\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createPlugin } from '@backstage/core-plugin-api';\nimport { catalogEntityRouteRef, catalogGraphRouteRef } from './routes';\n\n/**\n * Catalog Graph Plugin instance.\n * @public\n */\nexport const catalogGraphPlugin = createPlugin({\n  id: 'catalog-graph',\n  routes: {\n    catalogGraph: catalogGraphRouteRef,\n  },\n  externalRoutes: {\n    catalogEntity: catalogEntityRouteRef,\n  },\n});\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  createComponentExtension,\n  createRoutableExtension,\n} from '@backstage/core-plugin-api';\nimport { catalogGraphPlugin } from './plugin';\nimport { catalogGraphRouteRef } from './routes';\n\n/**\n * A card that displays the directly related entities to the current entity.\n *\n * @public\n */\nexport const EntityCatalogGraphCard = catalogGraphPlugin.provide(\n  createComponentExtension({\n    name: 'EntityCatalogGraphCard',\n    component: {\n      lazy: () =>\n        import('./components/CatalogGraphCard').then(m => m.CatalogGraphCard),\n    },\n  }),\n);\n\n/**\n * A standalone page that can be added to your application providing a viewer\n * for your entities and their relations.\n *\n * @public\n */\nexport const CatalogGraphPage = catalogGraphPlugin.provide(\n  createRoutableExtension({\n    name: 'CatalogGraphPage',\n    component: () =>\n      import('./components/CatalogGraphPage').then(m => m.CatalogGraphPage),\n    mountPoint: catalogGraphRouteRef,\n  }),\n);\n"],"names":["useStyles","makeStyles"],"mappings":"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"}