import { JsonObject, JsonValue } from '@backstage/types';
import { Entity, KindValidator } from '@backstage/catalog-model';

/**
 * Information about a template that is stored on a task specification.
 * Includes a stringified entityRef, and the baseUrl which is usually the relative path of the template definition
 *
 * @public
 */
declare type TemplateInfo = {
    entityRef: string;
    baseUrl?: string;
};
/**
 * An individual step of a scaffolder task, as stored in the database.
 *
 * @public
 */
interface TaskStep {
    id: string;
    name: string;
    action: string;
    input?: JsonObject;
    if?: string | boolean;
}
/**
 * A scaffolder task as stored in the database, generated from a v1beta3
 * apiVersion Template.
 *
 * @public
 */
interface TaskSpecV1beta3 {
    apiVersion: 'scaffolder.backstage.io/v1beta3';
    parameters: JsonObject;
    steps: TaskStep[];
    output: {
        [name: string]: JsonValue;
    };
    templateInfo?: TemplateInfo;
}
/**
 * A scaffolder task as stored in the database, generated from a Template.
 *
 * @public
 */
declare type TaskSpec = TaskSpecV1beta3;

/**
 * Backstage catalog Template kind Entity. Templates are used by the Scaffolder
 * plugin to create new entities, such as Components.
 *
 * @public
 */
interface TemplateEntityV1beta3 extends Entity {
    apiVersion: 'scaffolder.backstage.io/v1beta3';
    kind: 'Template';
    spec: {
        type: string;
        parameters?: JsonObject | JsonObject[];
        steps: Array<{
            id?: string;
            name?: string;
            action: string;
            input?: JsonObject;
            if?: string | boolean;
        }>;
        output?: {
            [name: string]: string;
        };
        owner?: string;
    };
}
/**
 * Entity data validator for {@link TemplateEntityV1beta3}.
 *
 * @public
 */
declare const templateEntityV1beta3Validator: KindValidator;

export { TaskSpec, TaskSpecV1beta3, TaskStep, TemplateEntityV1beta3, TemplateInfo, templateEntityV1beta3Validator };
