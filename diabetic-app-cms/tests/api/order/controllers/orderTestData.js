const OrderStatus = require("../../../../src/api/order/services/OrderStatus");

const mockAddress = {
  flatOrVillaNumber: "800",
  buildingOrVilla: "The Offices 4",
  street: "One Central",
  area: "DWTC",
  directions: "We Work",
  latitude: 25.219955694703355,
  longitude: 55.2855488821971,
};

const mockPrescriptionNumber = 1001;

const mockAuthUser = {
  id: 101,
};

const mockPatientUser = {
  user: {
    id: 6,
    username: "971525239148",
    email: "test.mail@strapi.com",
    role: {
      id: 3,
      name: "Patient",
      description: "This is some Patient Role",
      type: "patient",
      createdAt: "2022-08-30T16:08:38.069Z",
      updatedAt: "2022-10-18T11:59:23.844Z",
    },
  },
};

const mockPrescriptionForSameUser = {
  id: mockPrescriptionNumber,
  firstName: "MockUserFName",
  lastName: "MockUserLName",
  status: "New",
  createdAt: "2022-09-22T07:09:52.507Z",
  updatedAt: "2022-09-22T07:09:52.507Z",
  patient: mockAuthUser,
};

const mockOrderDetails = {
  id: 3,
  schedule: "2022-10-04T10:00:01.000Z",
  amount: 8589.99,
  currency: "AED",
  status: null,
  createdAt: "2022-10-03T12:07:24.760Z",
  updatedAt: "2022-10-18T10:30:43.073Z",
  patient: {
    id: 6,
    username: "971527209148",
    email: "test.test@mail.com",
    provider: "local",
    password: "$2a$10$VsfoNNLHeZyN.7loOsayme6HFBtoZriUzof2SEK4k0MzUgf8g.V8.",
    resetPasswordToken: null,
    confirmationToken: null,
    confirmed: true,
    blocked: false,
    createdAt: "2022-09-16T07:55:00.188Z",
    updatedAt: "2022-10-18T12:06:07.017Z",
    passwordExpiresAt: "2022-10-18T12:07:41.598Z",
    firstName: "Test",
    middleName: null,
    lastName: "tes",
    mobileNumber: "971527209148",
    emiratesId: "78419987986785",
    reminderFrequency: 90,
    passwordGeneratedAt: "2022-10-18T12:02:41.598Z",
    maxUnsuccessfulLoginCount: 0,
    lastUnsuccessfulLoginTime: null,
  },
};

const mockFindOneOrderDetails = {
  id: 4,
  amount: 8589.99,
  currency: "AED",
  status: null,
  patient: {
    id: 6,
    username: "971527209148",
    email: "test.test@mail.com",
  },
};

const mockFindOneOrderDetailsWithPayment = {
  id: 4,
  amount: 8589.99,
  currency: "AED",
  status: null,
  patient: {
    id: 6,
    username: "971527209148",
    email: "test.test@mail.com",
  },
  payment: {
    id: 1,
    maskedCardNumber: "623462346",
    paymentType: "Mastercard",
    currency: "AED",
    providerPaymentId: "sk_ieqenivnerwokj",
    providerMetadata: {
      id: "pi_3LxUnkI3Fb4xUkyy1wKpxW3s",
      amount: 3025,
      object: "payment_intent",
      review: null,
      source: null,
      status: "requires_payment_method",
      charges: {
        url: "/v1/charges?payment_intent=pi_3LxUnkI3Fb4xUkyy1wKpxW3s",
        data: [],
        object: "list",
        has_more: false,
        total_count: 0,
      },
      created: 1666872192,
      invoice: null,
      currency: "aed",
      customer: null,
      livemode: false,
      metadata: {
        orderId: "1",
        patientId: "16",
        prescriptionId: "1",
      },
      shipping: null,
      processing: null,
      application: null,
      canceled_at: null,
      description: null,
      next_action: null,
      on_behalf_of: null,
      client_secret:
        "pi_3LxUnkI3Fb4xUkyy1wKpxW3s_secret_cF5fGRWh51967wIxag3kc4StB",
      receipt_email: null,
      transfer_data: null,
      amount_details: {
        tip: {},
      },
      capture_method: "automatic",
      payment_method: null,
      transfer_group: null,
      amount_received: 0,
      amount_capturable: 0,
      last_payment_error: null,
      setup_future_usage: null,
      cancellation_reason: null,
      confirmation_method: "automatic",
      payment_method_types: ["card"],
      statement_descriptor: null,
      application_fee_amount: null,
      payment_method_options: {
        card: {
          network: null,
          installments: null,
          mandate_options: null,
          request_three_d_secure: "automatic",
        },
      },
      automatic_payment_methods: {
        enabled: true,
      },
      statement_descriptor_suffix: null,
    },
    correlationId: null,
    amount: 8590,
    status: "Created",
    createdAt: "2022-10-20T10:54:25.037Z",
    updatedAt: "2022-10-20T10:54:26.188Z",
    publishedAt: "2022-10-20T10:54:26.180Z",
  },
};

const mockUnrelatedPatientOrderDetails = {
  id: 4,
  amount: 8589.99,
  currency: "AED",
  status: null,
  patient: {
    id: 90,
    username: "971527209148",
    email: "test.test@mail.com",
  },
};

const mockFindOneWithOrderIDOrderDetails = {
  amount: 8589.99,
  currency: "AED",
  status: null,
  patient: {
    id: 6,
    username: "971527209148",
    email: "test.test@mail.com",
    provider: "local",
    password: "$2a$10$VsfoNNLHeZyN.7loOsayme6HFBtoZriUzof2SEK4k0MzUgf8g.V8.",
    resetPasswordToken: null,
    confirmationToken: null,
    confirmed: true,
    blocked: false,
    createdAt: "2022-09-16T07:55:00.188Z",
    updatedAt: "2022-10-18T12:06:07.017Z",
    passwordExpiresAt: "2022-10-18T12:07:41.598Z",
    firstName: "Test",
    middleName: null,
    lastName: "tes",
    mobileNumber: "971527209148",
    emiratesId: "78419987986785",
    reminderFrequency: 90,
    passwordGeneratedAt: "2022-10-18T12:02:41.598Z",
    maxUnsuccessfulLoginCount: 0,
    lastUnsuccessfulLoginTime: null,
  },
};

const mockPrescriptionForAnotherUser = {
  ...mockPrescriptionForSameUser,
  patient: {
    id: 102,
  },
};

const mockSchedule = "2022-09-30T09:30:00.000Z";

const mockValidContext = {
  state: {
    user: mockAuthUser,
  },
  request: {
    body: {
      prescriptionNumber: mockPrescriptionForSameUser.id,
      address: mockAddress,
      schedule: mockSchedule,
    },
  },
  created: jest.fn(),
};

const mockValidPatientContext = {
  params: {
    id: 5,
  },
  query: { populate: { patient: true } },
  state: {
    user: {
      id: 6,
      username: "971527209148",
      email: "test.test@mail.com",
      provider: "local",
      mobileNumber: "971527209148",
      role: {
        id: 3,
        name: "Patient",
        description: "This is some Patient Role",
        type: "patient",
        createdAt: "2022-08-30T16:08:38.069Z",
        updatedAt: "2022-10-18T11:59:23.844Z",
      },
    },
  },
};

const mockDifferentRoleUser = {
  params: {
    id: 5,
  },
  query: { populate: { patient: true } },
  state: {
    user: {
      id: 6,
      username: "971527209148",
      email: "test.test@mail.com",
      provider: "local",
      mobileNumber: "971527209148",
      role: {
        id: 3,
        name: "Pharmist",
        description: "This is some Pharmist Role",
        type: "patient",
        createdAt: "2022-08-30T16:08:38.069Z",
        updatedAt: "2022-10-18T11:59:23.844Z",
      },
    },
  },
};

const mockDefaultOrderDetailResponse = {
  data: {
    id: 3,
    attributes: {
      schedule: "2022-10-04T10:00:01.000Z",
      amount: 8589.99,
      currency: "AED",
      status: null,
      createdAt: "2022-10-03T12:07:24.760Z",
      updatedAt: "2022-10-18T10:30:43.073Z",
    },
  },
  meta: {},
};

const mockOrder = {
  patient: mockAuthUser,
  prescription: mockPrescriptionForSameUser,
  status: OrderStatus.Pending,
  schedule: mockSchedule,
  createdAt: "2022-09-22T09:01:40.326Z",
  updatedAt: "2022-09-22T09:01:40.326Z",
  address: mockAddress,
};

const mockAppConfig = {
  emailList: "1@example.com\n2@example.com",
  newPrescriptionEmailSubject: "test subject",
  newPrescriptionEmailTemplate: "test email template",
};

const mockPaymentTemplateAppConfig = {
  emailList: "1@example.com\n2@example.com",
  newPaymentReceivedEmailSubject: "test subject",
  paymentReceivedEmailTemplate: "test email template",
};

const mockBeforeUpdateLifeCycleEventData = {
  params: {
    populate: {
      patient: true,
      address: { populate: {} },
      prescription: true,
      payment: true,
      createdBy: true,
      updatedBy: true,
    },
    where: { id: 4 },
    data: {
      schedule: "2022-10-20T08:00:37.000Z",
      amount: null,
      currency: "AED",
      status: "Insurance Approved",
      patient: 6,
      prescription: 34,
      payment: null,
      updatedBy: 1,
      address: { id: 4, __pivot: [Object] },
    },
  },
  model: {
    attributes: {
      status: {
        type: "enumeration",
        enum: [
          "Pending",
          "Insurance Approved",
          "Require Payment",
          "Payment Received",
          "Delivery Scheduled",
          "Fulfilled",
          "Failed",
          "Canceled",
        ],
        columnName: "status",
      },
    },
  },
};
const expectedPaymentProviderData = {
  id: "pi_3LzJdnI3Fb4xUkyy1OQBwwVD",
  object: "payment_intent",
  amount: 3225,
  amount_capturable: 0,
  amount_details: {
    tip: {},
  },
  amount_received: 0,
  application: null,
  application_fee_amount: null,
  automatic_payment_methods: {
    enabled: true,
  },
  canceled_at: null,
  cancellation_reason: null,
  capture_method: "automatic",
  charges: {
    object: "list",
    data: [],
    has_more: false,
    total_count: 0,
    url: "/v1/charges?payment_intent=pi_3LzJdnI3Fb4xUkyy1OQBwwVD",
  },
  client_secret: "pi_3LzJdnI3Fb4xUkyy1OQBwwVD_secret_x0o0uzZLdxsCJplqYP4VXGPx3",
  confirmation_method: "automatic",
  created: 1667305947,
  currency: "aed",
  customer: null,
  description: null,
  invoice: null,
  last_payment_error: null,
  livemode: false,
  metadata: {
    orderId: "1",
    patientId: "16",
    prescriptionId: "1",
  },
  next_action: null,
  on_behalf_of: null,
  payment_method: null,
  payment_method_options: {
    card: {
      installments: null,
      mandate_options: null,
      network: null,
      request_three_d_secure: "automatic",
    },
  },
  payment_method_types: ["card"],
  processing: null,
  receipt_email: null,
  review: null,
  setup_future_usage: null,
  shipping: null,
  source: null,
  statement_descriptor: null,
  statement_descriptor_suffix: null,
  status: "requires_payment_method",
  transfer_data: null,
  transfer_group: null,
};
const paymentProviderData = {
  id: "pi_3LzJdnI3Fb4xUkyy1OQBwwVD",
  object: "payment_intent",
  amount: 3225,
  amount_capturable: 0,
  amount_details: {
    tip: {},
  },
  amount_received: 0,
  application: null,
  application_fee_amount: null,
  automatic_payment_methods: {
    enabled: true,
  },
  canceled_at: null,
  cancellation_reason: null,
  capture_method: "automatic",
  charges: {
    object: "list",
    data: [],
    has_more: false,
    total_count: 0,
    url: "/v1/charges?payment_intent=pi_3LzJdnI3Fb4xUkyy1OQBwwVD",
  },
  client_secret: "pi_3LzJdnI3Fb4xUkyy1OQBwwVD_secret_x0o0uzZLdxsCJplqYP4VXGPx3",
  confirmation_method: "automatic",
  created: 1667305947,
  currency: "aed",
  customer: null,
  description: null,
  invoice: null,
  last_payment_error: null,
  livemode: false,
  metadata: {
    orderId: "1",
    patientId: "16",
    prescriptionId: "1",
  },
  next_action: null,
  on_behalf_of: null,
  payment_method: null,
  payment_method_options: {
    card: {
      installments: null,
      mandate_options: null,
      network: null,
      request_three_d_secure: "automatic",
    },
  },
  payment_method_types: ["card"],
  processing: null,
  receipt_email: null,
  review: null,
  setup_future_usage: null,
  shipping: null,
  source: null,
  statement_descriptor: null,
  statement_descriptor_suffix: null,
  status: "requires_payment_method",
  transfer_data: null,
  transfer_group: null,
};
const mockAfterUpdateLifeCycleEventData = {
  result: {
    id: 4,
    schedule: "2022-10-20T08:00:37.000Z",
    amount: 3352,
    currency: "AED",
    status: "Insurance Approved",
    createdAt: "2022-10-05T07:16:43.573Z",
    updatedAt: "2022-10-25T12:41:34.848Z",
    patient: {
      id: 6,
      username: "971527209148",
      email: "jean.xavier@albathanext.com",
      provider: "local",
      password: "$2a$10$VsfoNNLHeZyN.7loOsayme6HFBtoZriUzof2SEK4k0MzUgf8g.V8.",
      resetPasswordToken: null,
      confirmationToken: null,
      confirmed: true,
      blocked: false,
      createdAt: "2022-09-16T07:55:00.188Z",
      updatedAt: "2022-10-18T12:06:07.017Z",
      passwordExpiresAt: "2022-10-18T12:07:41.598Z",
      firstName: "Jean",
    },
  },
  params: {
    populate: {
      patient: true,
      address: { populate: {} },
      prescription: true,
      payment: true,
      createdBy: true,
      updatedBy: true,
    },
    where: { id: 4 },
    data: {
      schedule: "2022-10-20T08:00:37.000Z",
      amount: 34443,
      currency: "AED",
      status: "Insurance Approved",
      patient: 6,
      prescription: 34,
      payment: null,
      updatedBy: 1,
      address: { id: 4, __pivot: [Object] },
    },
  },
  model: {
    attributes: {
      status: {
        type: "enumeration",
        enum: [
          "Pending",
          "Insurance Approved",
          "Require Payment",
          "Payment Received",
          "Delivery Scheduled",
          "Fulfilled",
          "Failed",
          "Canceled",
        ],
        columnName: "status",
      },
    },
  },
};

const mockAfterPaymentCompleteLifeCycleEvent = {
  result: {
    id: 4,
    schedule: "2022-10-20T08:00:37.000Z",
    amount: 3352,
    currency: "AED",
    status: "Payment Received",
    createdAt: "2022-10-05T07:16:43.573Z",
    updatedAt: "2022-10-25T12:41:34.848Z",
    patient: {
      id: 6,
      username: "971527209148",
      email: "jean.xavier@albathanext.com",
      provider: "local",
      password: "$2a$10$VsfoNNLHeZyN.7loOsayme6HFBtoZriUzof2SEK4k0MzUgf8g.V8.",
      resetPasswordToken: null,
      confirmationToken: null,
      confirmed: true,
      blocked: false,
      createdAt: "2022-09-16T07:55:00.188Z",
      updatedAt: "2022-10-18T12:06:07.017Z",
      passwordExpiresAt: "2022-10-18T12:07:41.598Z",
      firstName: "Jean",
    },
  },
  params: {
    populate: {
      patient: true,
      address: { populate: {} },
      prescription: true,
      payment: true,
      createdBy: true,
      updatedBy: true,
    },
    where: { id: 4 },
    data: {
      schedule: "2022-10-20T08:00:37.000Z",
      amount: 34443,
      currency: "AED",
      status: "Payment Received",
      patient: 6,
      prescription: 34,
      payment: null,
      updatedBy: 1,
      address: { id: 4, __pivot: [Object] },
    },
  },
  model: {
    attributes: {
      status: {
        type: "enumeration",
        enum: [
          "Pending",
          "Insurance Approved",
          "Require Payment",
          "Payment Received",
          "Delivery Scheduled",
          "Fulfilled",
          "Failed",
          "Canceled",
        ],
        columnName: "status",
      },
    },
  },
};

const mockZeroCoPaymentLifeCycle = {
  result: {
    id: 4,
    schedule: "2022-10-20T08:00:37.000Z",
    amount: 0,
    currency: "AED",
    status: "Insurance Approved",
    createdAt: "2022-10-05T07:16:43.573Z",
    updatedAt: "2022-10-25T12:41:34.848Z",
    patient: {
      id: 6,
      username: "971527209148",
      email: "jean.xavier@albathanext.com",
      provider: "local",
      password: "$2a$10$VsfoNNLHeZyN.7loOsayme6HFBtoZriUzof2SEK4k0MzUgf8g.V8.",
      resetPasswordToken: null,
      confirmationToken: null,
      confirmed: true,
      blocked: false,
      createdAt: "2022-09-16T07:55:00.188Z",
      updatedAt: "2022-10-18T12:06:07.017Z",
      passwordExpiresAt: "2022-10-18T12:07:41.598Z",
      firstName: "Jean",
    },
  },
  params: {
    populate: {
      patient: true,
      address: { populate: {} },
      prescription: true,
      payment: true,
      createdBy: true,
      updatedBy: true,
    },
    where: { id: 4 },
    data: {
      schedule: "2022-10-20T08:00:37.000Z",
      amount: 34443,
      currency: "AED",
      status: "Insurance Approved",
      patient: 6,
      prescription: 34,
      payment: null,
      updatedBy: 1,
      address: { id: 4, __pivot: [Object] },
    },
  },
  model: {
    attributes: {
      status: {
        type: "enumeration",
        enum: [
          "Pending",
          "Insurance Approved",
          "Require Payment",
          "Payment Received",
          "Delivery Scheduled",
          "Fulfilled",
          "Failed",
          "Canceled",
        ],
        columnName: "status",
      },
    },
  },
};

const mockFetchOrderPaymentNotification = {
  id: 4,
  schedule: "2022-10-20T08:00:37.000Z",
  amount: 389.53,
  currency: "AED",
  status: "Payment Received",
  createdAt: "2022-10-05T07:16:43.573Z",
  updatedAt: "2022-11-14T13:01:09.104Z",
  payment: {
    id: 40,
    maskedCardNumber: "4242",
    paymentType: "Card",
    currency: "AED",
    providerPaymentId: "pi_3M42HOI3Fb4xUkyy1zaOLnqi",
    providerMetadata: {
      id: "pi_3M42HOI3Fb4xUkyy1zaOLnqi",
      amount: 38953,
      object: "payment_intent",
      review: null,
      source: null,
      status: "requires_payment_method",
      charges: [Object],
      created: 1668430850,
      invoice: null,
      currency: "aed",
      customer: null,
      livemode: false,
      metadata: [Object],
      shipping: null,
      processing: null,
      application: null,
      canceled_at: null,
      description: null,
      next_action: null,
      on_behalf_of: null,
      client_secret:
        "pi_3M42HOI3Fb4xUkyy1zaOLnqi_secret_W6pHgqKpBmRLdCfrtz3xR9c4U",
      receipt_email: null,
      transfer_data: null,
      amount_details: [Object],
      capture_method: "automatic",
      payment_method: null,
      transfer_group: null,
      amount_received: 0,
      amount_capturable: 0,
      last_payment_error: null,
      setup_future_usage: null,
      cancellation_reason: null,
      confirmation_method: "automatic",
      payment_method_types: [Array],
      statement_descriptor: null,
      application_fee_amount: null,
      payment_method_options: [Object],
      automatic_payment_methods: [Object],
      statement_descriptor_suffix: null,
    },
    correlationId: "6",
    amount: 389.53,
    status: "Succeeded",
    createdAt: "2022-11-14T13:00:51.081Z",
    updatedAt: "2022-11-14T13:01:09.085Z",
    paymentSubType: "Visa",
  },
  patient: {
    id: 6,
    username: "971527209148",
    email: "jean.xavier@albathanext.com",
    provider: "local",
    password: "$2a$10$WWgl6Ri6bDziIBnWtvpoXuzMrLGaqPN2h4mLTOo0CuwDj4x4u4xSG",
    resetPasswordToken: null,
    confirmationToken: null,
    confirmed: true,
    blocked: false,
    createdAt: "2022-09-16T07:55:00.188Z",
    updatedAt: "2022-11-14T11:59:40.344Z",
    passwordExpiresAt: "2022-11-14T12:04:23.943Z",
    firstName: "Jean",
    middleName: null,
    lastName: "Xavier",
    mobileNumber: "971527209148",
    emiratesId: "78419987986785",
    reminderFrequency: 90,
    passwordGeneratedAt: "2022-11-14T11:59:23.943Z",
    maxUnsuccessfulLoginCount: 0,
    lastUnsuccessfulLoginTime: null,
  },
};

const mockAppConfigForCashOrCardOnDelivery = {
  emailList: "1@example.com\n2@example.com",
  cashOrCardOnDeliveryEmailSubject: "test subject",
  cashOrCardOnDeliveryEmailTemplate: "test email template",
};

module.exports = {
  mockValidContext,
  mockPrescriptionForSameUser,
  mockPrescriptionForAnotherUser,
  mockAddress,
  mockAuthUser,
  mockSchedule,
  mockPrescriptionNumber,
  mockOrder,
  mockAppConfig,
  mockFindOneOrderDetails,
  mockValidPatientContext,
  mockFindOneWithOrderIDOrderDetails,
  mockDifferentRoleUser,
  mockDefaultOrderDetailResponse,
  mockUnrelatedPatientOrderDetails,
  mockFindOneOrderDetailsWithPayment,
  mockBeforeUpdateLifeCycleEventData,
  mockAfterUpdateLifeCycleEventData,
  paymentProviderData,
  expectedPaymentProviderData,
  mockAfterPaymentCompleteLifeCycleEvent,
  mockFetchOrderPaymentNotification,
  mockPaymentTemplateAppConfig,
  mockAppConfigForCashOrCardOnDelivery,
  mockZeroCoPaymentLifeCycle,
};
